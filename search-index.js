var searchIndex = JSON.parse('{\
"rs3":{"doc":"","t":[],"n":[],"q":[],"d":[],"i":[],"f":[],"p":[]},\
"rs3cache":{"doc":"actions status","t":[2,0,0,0,0,0,0,13,13,13,3,4,13,13,13,13,13,13,13,13,13,13,13,4,13,13,13,13,13,13,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,0,11,11,11,12,11,11,11,11,11,12,11,11,5,11,11,11,11,12,11,12,12,11,11,11,12,11,12,12,12,12,12,12,12,12,11,12,12,12,12,12,12,12,12,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,3,3,3,3,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,3,13,13,13,4,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,13,3,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,4,13,13,13,13,4,4,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,3,18,18,18,18,18,18,18,18,18,18,18,18,18,3,18,18,18,18,18,18,18,18,3,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,12,11,12,12,11,11,12,12,11,11,12,12,12,12,12,12,11,11,11,11,12,12,11,12,12,5,11,11,12,12,12,11,11,11,12,12,12,12,11,11,11,12,12,0,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,11,12,12,12,12,11,11,12,11,11,11,11,12,12,12,12,12,12,12,12,3,3,3,3,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,3,12,12,11,11,11,12,11,11,12,12,12,11,11,11,12,12,11,11,5,5,11,11,11,11,11,12,12,11,11,11,12,12,11,0,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,11,12,11,11,12,12,12,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,3,3,3,3,3,3,3,3,3,3,3,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,13,3,13,4,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,12,11,12,12,11,11,11,11,11,11,11,11,11,12,11,11,11,12,12,3,11,12,11,11,12,11,11,11,11,11,11,11,5,11,11,11,12,11,12,12,11,11,11,11,12,12,12,0,12,12,12,12,11,12,12,11,12,12,11,11,11,11,12,12,12,12,12,12,3,3,3,3,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,3,11,11,11,11,11,11,11,11,11,11,11,12,11,11,12,11,11,11,11,6,3,3,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,5,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,12,12,12,12,12,12,11,12,12,11,11,11,11,12,12,11,11,11,12,11,11,5,11,11,11,11,11,12,12,12,12,11,11,11,11,12,12,12,12,12,12,12,12,12,0,12,12,12,12,12,12,12,12,12,12,11,12,12,12,12,12,11,11,12,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,3,11,11,11,11,11,11,11,11,11,11,12,12,11,11,12,12,11,11,11,11,11,12,12,3,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,12,11,11,11,11,12,12,11,11,11,11,11,11,11,6,5,5,5,3,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,12,11,11,11,11,12,11,11,11,11,11,11,11,3,6,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,12,11,12,12,11,11,11,11,11,12,3,11,11,11,11,11,12,11,11,11,11,11,5,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,12,12,11,11,11,11,12,12,11,11,11,11,11,11,12,18,3,3,3,3,3,18,3,18,18,3,18,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,12,12,12,12,11,11,5,5,12,5,5,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,12,12,11,11,11,11,11,11,11,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,0,3,3,3,3,3,3,3,3,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,5,5,5,5,5,5,5,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,0,0,7,3,0,11,11,11,11,11,12,11,11,11,11,12,12,11,0,0,12,0,5,5,5,12,12,0,11,11,11,5,5,5,5,5,5,5,5,5,0,13,4,3,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,0,0,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,12,12,3,13,3,13,4,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12],"n":["cache","cli","definitions","ffi","renderers","structures","types","Achievements","All","All","Config","Dump","Enums","ItemConfigs","LocationConfigs","LocationConfigsEach","Locations","LocationsEach","Map","Maplabels","Music","NpcConfig","Overlays","Render","Sprites","Structs","TilesEach","Underlays","VarbitConfigs","Worldmaps","assert_coherence","augment_args","augment_args_for_update","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","call","call","clone","clone","clone_into","clone_into","default","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","dump","env","fmt","fmt","fmt","from","from","from","from_arg_matches","from_arg_matches_mut","init","init","init","input","into","into","into","into_app","into_app_for_update","output","render","to_owned","to_owned","to_possible_value","to_possible_value","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","update_from_arg_matches","update_from_arg_matches_mut","value_variants","value_variants","achievements","dbrows","enums","indextype","item_configs","location_configs","locations","maplabel_configs","mapscenes","mapsquares","music","npc_configs","npcs","overlays","sprites","structs","tiles","underlays","varbit_configs","worldmaps","Achievement","achievement_fields_impl","arguments","borrow","borrow_mut","category","clone","clone_into","default","deref","deref_mut","description","drop","dump_all","export","extract","extract","fmt","fmt","free_to_play","from","hidden","id","init","into","into_py","ironman_description","items_iter","name","points","previous_achievements","quest_req_for_miniquests","reqs_23","reqs_25","required_quest_ids","reward","serialize","skill_req_count","skill_requirements_1","skill_requirements_2","sprite_id","sub_achievements","sub_category","sub_req_count","subreqs_14","to_owned","to_string","try_from","try_into","type_id","type_object_raw","unknown_10","unknown_13","unknown_17","unknown_27","unknown_29","unknown_31","unknown_32","unknown_35","unknown_37","unknown_38","unknown_6","unknown_9","MaybeIronmanSkillRequirement","MultipleVarbitsRequirement","PackedVarbitRequirement","PartialVarbitRequirement","SkillRequirement","VarbitRequirement","VarbitRequirement10","arguments","arguments","arguments","arguments","arguments","arguments","arguments","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","description","description","description","description","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","drop","drop","drop","drop","drop","drop","drop","extract","extract","extract","extract","extract","extract","extract","extract","extract","extract","extract","extract","extract","extract","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into_py","into_py","into_py","into_py","into_py","into_py","into_py","is_ironman","items_iter","items_iter","items_iter","items_iter","items_iter","items_iter","items_iter","level","level","serialize","serialize","serialize","serialize","serialize","serialize","serialize","skill","skill","step_size","step_size","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_object_raw","type_object_raw","type_object_raw","type_object_raw","type_object_raw","type_object_raw","type_object_raw","value","value","varbit","varbit","DbRow","Integer","Null","Text","Value","arguments","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","content_type","data","default","deref","deref","deref_mut","deref_mut","drop","drop","dump_all","extract","extract","extract","fmt","fmt","fmt","from","from","id","init","init","into","into","into_py","items_iter","serialize","serialize","to_owned","to_owned","to_string","try_from","try_from","try_into","try_into","type_id","type_id","type_object_raw","unknown_1","COORDINATE","Enum","Int_0","Int_0","Int_1","Int_10","Int_10","Int_102","Int_105","Int_105","Int_11","Int_115","Int_115","Int_126","Int_126","Int_128","Int_128","Int_17","Int_17","Int_21","Int_22","Int_23","Int_23","Int_24","Int_25","Int_25","Int_26","Int_26","Int_28","Int_29","Int_3","Int_30","Int_30","Int_31","Int_32","Int_32","Int_33","Int_33","Int_37","Int_39","Int_39","Int_41","Int_41","Int_42","Int_42","Int_57","Int_6","Int_73","Int_73","Int_74","Int_74","Int_8","Int_9","Int_9","Int_97","Int_99","Integer","KeyType","STRING_36","String","Uninit","Uninit","Value","ValueType","arguments","arguments","arguments","arguments","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","default","default","default","default","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","drop","drop","drop","drop","dump_all","eq","eq","eq","equivalent","equivalent","equivalent","export","extract","extract","fmt","fmt","fmt","fmt","fmt","from","from","from","from","hash","hash","id","init","init","init","init","into","into","into","into","into_py","into_py","into_py","into_py","is_init","is_init","items_iter","serialize","serialize","serialize","serialize","to_owned","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_object_raw","unknown_131","variants","ACHIEVEMENT_CONFIG","ANIMSRT7","ANIMS_KEYFRAMES","AREA","AUDIOSTREAMS","BASES","BASE_ANIMATION_SET","BILLBOARDS","BINARY","CAMPAIGN","CLAN","CLAN_SETTING","CLIENT","CONFIG","CURSORS","ConfigType","DBROWS","DBTABLE","DBTABLEINDEX","DEFAULTS","ENUM_CONFIG","FONTMETRICS","GLOBAL_QUICKCHAT","HEADBAR","HITSPLATS","HUNT","IDENTITY_KIT","INTERFACES","INVENTORY","IndexType","LIGHT","LOCATIONS","LOC_CONFIG","MAPLABELS","MAPSCENES","MAPSV2","MATERIALS","MODELSRT7","MapFileType","NPC","NPCS","NPC_CONFIG","OBJECT","OBJ_CONFIG","OVERLAYS","PARTICLES","PLAYER","QUESTS","QUICKCHAT","REGION","SCRIPTS","SEQGROUP","SEQ_CONFIG","SKYBOX","SPOT_CONFIG","SPRITES","STRUCT_CONFIG","TEXTURES","TEXTURES_ETC","TEXTURES_PNG","TEXTURES_PNG_MIPPED","TILES","TOOLTIPS","UNDERLAYS","UNKNOWN_42","UNKNOWN_48","UNKNOWN_49","UNKNOWN_5","UNKNOWN_6","UNKNOWN_7","UNKNOWN_7","UNKNOWN_70","UNKNOWN_73","UNKNOWN_75","UNKNOWN_76","UNKNOWN_77","UNKNOWN_8","UNKNOWN_83","UNKNOWN_9","VARBITS","VORBIS","WATER_LOCATIONS","WATER_TILES","WORLD","WORLDMAP","WORLDMAPAREAS","WORLDMAPLABELS","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","from","from","from","init","init","init","into","into","into","iterator","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","ItemConfig","ambiance","arguments","base_model","bind_template","borrow","borrow_mut","buff_effect","category","clone","clone_into","colour_replacements","combine_info","combine_num_required","combine_shard_name","combine_template","contrast","default","deref","deref_mut","drop","dummy","dummy_item","dump_all","equip_id","equipslot_id","export","extract","extract","female_head_models","female_models","female_translate","fmt","fmt","from","ge_buy_limit","ground_action_cursor","ground_actions","id","init","into","into_py","is_members","is_tradeable","item_config_fields","items_iter","loan_id","loan_template","male_head_models","male_models","male_translate","model_yaw","multi_stack_size","name","name_color","never_stackable","note_data","note_template","params","pick_size_shift","quests","randomize_ground_pos","recolour_indices","recolour_palette","retexture_indices","rotation","scale","serialize","stack_info","stackable","team","textures","to_owned","to_string","translation","try_from","try_into","type_id","type_object_raw","unknown_15","unknown_167","unknown_168","unknown_27","unknown_bind_link","value","widget_action_cursor","widget_actions","ColourReplacements","Quests","RecolourPalette","Rotation","StackInfo","Textures","Translation","arguments","arguments","arguments","arguments","arguments","arguments","arguments","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","colours","default","default","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","deserialize","drop","drop","drop","drop","drop","drop","drop","eq","eq","equivalent","equivalent","extract","extract","extract","extract","extract","extract","extract","extract","extract","extract","extract","extract","extract","extract","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into_py","into_py","into_py","into_py","into_py","into_py","into_py","items_iter","items_iter","items_iter","items_iter","items_iter","items_iter","items_iter","palette","pitch","quests","roll","serialize","serialize","serialize","serialize","serialize","serialize","serialize","textures","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_object_raw","type_object_raw","type_object_raw","type_object_raw","type_object_raw","type_object_raw","type_object_raw","x","y","yaw","LocationConfig","actions","ambient","arguments","borrow","borrow_mut","breakroutefinding","clone","clone_into","colour_replacements","contrast","cursors","default","deref","deref_mut","dim_x","dim_y","drop","dump_all","export","export_each","extract","extract","fmt","fmt","from","headmodels","id","init","into","into_py","is_members","is_transparent","items_iter","location_config_fields","mapfunction","mapscene","member_actions","mirror","model","models","morphs_1","morphs_2","name","occludes_1","occludes_2","params","recolour_palette","scale_x","scale_y","scale_z","serialize","textures","to_owned","to_string","translate_x","translate_y","translate_z","try_from","try_into","type_id","type_object_raw","unknown_101","unknown_104","unknown_159","unknown_160","unknown_162","unknown_163","unknown_164","unknown_165","unknown_166","unknown_167","unknown_17","unknown_170","unknown_171","unknown_173","unknown_177","unknown_178","unknown_186","unknown_188","unknown_189","unknown_19","unknown_196","unknown_197","unknown_198","unknown_199","unknown_200","unknown_201","unknown_202","unknown_203","unknown_204","unknown_21","unknown_22","unknown_24","unknown_25","unknown_27","unknown_28","unknown_44","unknown_45","unknown_69","unknown_73","unknown_75","unknown_78","unknown_79","unknown_81","unknown_82","unknown_88","unknown_89","unknown_93","unknown_94","unknown_95","unknown_97","unknown_98","unknown_99","unknown_array","ColourReplacements","ExtendedLocationMorphTable","HeadModels","LocationMorphTable","Models","Models2","Textures","Unknown160","Unknown163","Unknown173","Unknown201","Unknown204","Unknown78","Unknown79","arguments","arguments","arguments","arguments","arguments","arguments","arguments","arguments","arguments","arguments","arguments","arguments","arguments","arguments","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","colours","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","extract","extract","extract","extract","extract","extract","extract","extract","extract","extract","extract","extract","extract","extract","extract","extract","extract","extract","extract","extract","extract","extract","extract","extract","extract","extract","extract","extract","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","headmodels","id","ids","ids","init","init","init","init","init","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_py","into_py","into_py","into_py","into_py","into_py","into_py","into_py","into_py","into_py","into_py","into_py","into_py","into_py","items_iter","items_iter","items_iter","items_iter","items_iter","items_iter","items_iter","items_iter","items_iter","items_iter","items_iter","items_iter","items_iter","items_iter","models","models_2","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","some_bool","textures","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_object_raw","type_object_raw","type_object_raw","type_object_raw","type_object_raw","type_object_raw","type_object_raw","type_object_raw","type_object_raw","type_object_raw","type_object_raw","type_object_raw","type_object_raw","type_object_raw","unknown_1","unknown_1","unknown_1","unknown_1","unknown_1","unknown_2","unknown_2","unknown_2","unknown_2","unknown_2","unknown_3","unknown_3","unknown_3","unknown_4","unknown_4","unknown_5","unknown_6","values","values","var","var","vec_1","vec_2","False","Location","True","Watery","arguments","arguments","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","contains","deref","deref","deref_mut","deref_mut","drop","drop","dump","eq","eq","equivalent","equivalent","extract","extract","fmt","fmt","from","from","hash","hash","i","id","init","init","inner","into","into","into_py","into_py","items_iter","j","matches","plane","rotation","serialize","serialize","to_object","to_owned","to_owned","try_from","try_from","try_into","try_into","type","type_id","type_id","type_object_raw","x","y","MapLabelConfig","arguments","background_sprite","borrow","borrow_mut","category","clone","clone_into","default","deref","deref_mut","drop","dump_all","export","extract","extract","fmt","font_size","from","hover_sprite","id","init","into","into_py","items_iter","label_colour_1","label_colour_2","legacy_switch","maplabel_config_fields","params","polygon","rightclick_1","rightclick_2","serialize","sprite","text","to_owned","toggle_1","toggle_2","try_from","try_into","type_id","type_object_raw","unknown_21","unknown_22","unknown_28","unknown_30","unknown_7","unknown_8","LegacySwitch","Polygon","PolygonPoint","Toggle","arguments","arguments","arguments","arguments","background_colour","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","colour","default","default_reference","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","drop","drop","drop","drop","dx","dy","extract","extract","extract","extract","extract","extract","extract","extract","fmt","fmt","fmt","fmt","from","from","from","from","init","init","init","init","into","into","into","into","into_py","into_py","into_py","into_py","items_iter","items_iter","items_iter","items_iter","legacy_reference","lower","plane","points","serialize","serialize","serialize","serialize","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_object_raw","type_object_raw","type_object_raw","type_object_raw","upper","value","var","var","MapScene","borrow","borrow_mut","clone","clone_into","default","deref","deref_mut","drop","dump_all","fmt","from","id","init","into","sprite_id","to_owned","try_from","try_into","type_id","ColumnIter","GroupMapSquare","GroupMapSquareIterator","MapSquare","MapSquareIterator","MapSquares","all_locations_iter","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","core","core_i","core_j","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","export_locations_by_id","export_locations_by_square","export_tiles_by_square","fmt","from","from","from","from","from","get","get","i","indexed_columns","init","init","init","init","init","into","into","into","into","into","into_iter","into_iter","into_iter","iter","j","locations","members","new","new","next","next","progress_with","progress_with","size_hint","size_hint","take_locations","take_tiles","tiles","tiles_iter","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","water_locations","ChunkDescriptor","Jaga","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","deref","deref","deref_mut","deref_mut","drop","drop","export_each","fmt","fmt","from","from","init","init","into","into","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","NpcConfig","action_cursors","actions","ambience","ambient_sound","animate_idle","animation_group","arguments","army_icon","attack_cursor","borrow","borrow_mut","clone","clone_into","colour_replacements","combat","default","deref","deref_mut","draw_map_dot","drop","dump_all","export","extract","extract","fmt","fmt","from","head_icon_data","head_models","icon_height","id","init","into","into_py","items_iter","mapfunction","member_actions","model_contract","models","morphs_1","morphs_2","movement_capabilities","movement_type","name","npc_config_fields","old_cursor","old_cursor_2","params","quests","recolour_indices","recolour_palette","respawn_direction","retexture_indices","scale_xz","scale_y","serialize","shadow","shadow_alpha_intensity","size","slow_walk","texture_replacements","to_owned","to_string","translations","try_from","try_into","type_id","type_object_raw","unknown_103","unknown_107","unknown_140","unknown_141","unknown_143","unknown_155","unknown_158","unknown_159","unknown_162","unknown_163","unknown_164","unknown_165","unknown_168","unknown_169","unknown_178","unknown_179","unknown_180","unknown_182","unknown_184","unknown_99","AmbientSounds","ColourReplacements","ExtendedNpcMorphTable","HeadModels","NpcModels","NpcMorphTable","OldCursors","Quests","RecolourPalette","Shadow","ShadowIntensity","Textures","Translations","Unknown155","Unknown164","Unknown179","arguments","arguments","arguments","arguments","arguments","arguments","arguments","arguments","arguments","arguments","arguments","arguments","arguments","arguments","arguments","arguments","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","colour_replacements","cursor","default_id","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","dst_colour","dst_colour","extract","extract","extract","extract","extract","extract","extract","extract","extract","extract","extract","extract","extract","extract","extract","extract","extract","extract","extract","extract","extract","extract","extract","extract","extract","extract","extract","extract","extract","extract","extract","extract","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","ids","ids","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_py","into_py","into_py","into_py","into_py","into_py","into_py","into_py","into_py","into_py","into_py","into_py","into_py","into_py","into_py","into_py","items_iter","items_iter","items_iter","items_iter","items_iter","items_iter","items_iter","items_iter","items_iter","items_iter","items_iter","items_iter","items_iter","items_iter","items_iter","items_iter","models","models","op","quests","recolour_palette","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","src_colour","src_colour","textures","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","translations","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_object_raw","type_object_raw","type_object_raw","type_object_raw","type_object_raw","type_object_raw","type_object_raw","type_object_raw","type_object_raw","type_object_raw","type_object_raw","type_object_raw","type_object_raw","type_object_raw","type_object_raw","type_object_raw","unknown_1","unknown_1","unknown_1","unknown_1","unknown_2","unknown_2","unknown_2","unknown_2","unknown_3","unknown_3","unknown_3","unknown_4","unknown_4","unknown_4","unknown_5","unknown_5","unknown_6","var","var","Npc","borrow","borrow_mut","clone","clone_into","deref","deref_mut","deserialize","drop","fmt","from","i","id","init","into","j","plane","serialize","to_owned","try_from","try_into","type_id","x","y","Overlay","arguments","borrow","borrow_mut","clone","clone_into","default","deref","deref_mut","drop","dump_all","export","extract","extract","fmt","fmt","from","id","init","into","into_py","items_iter","primary_colour","secondary_colour","serialize","to_owned","to_string","try_from","try_into","type_id","type_object_raw","Sprite","deserialize","dumps","save_all","Struct","arguments","borrow","borrow_mut","clone","clone_into","default","deref","deref_mut","drop","dump_all","export","extract","extract","fmt","fmt","from","id","init","into","into_py","items_iter","params","serialize","to_owned","to_string","try_from","try_into","type_id","type_object_raw","Tile","TileArray","arguments","borrow","borrow_mut","clone","clone_into","default","deref","deref_mut","drop","dump","extract","extract","fmt","from","height","init","into","into_py","items_iter","overlay_id","serialize","settings","shape","to_owned","try_from","try_into","type_id","type_object_raw","underlay_id","Underlay","arguments","borrow","borrow_mut","clone","clone_into","colour","default","deref","deref_mut","drop","dump_all","export","extract","extract","fmt","from","id","init","into","into_py","items_iter","serialize","to_owned","try_from","try_into","type_id","type_object_raw","VarbitConfig","arguments","borrow","borrow_mut","clone","clone_into","default","deref","deref_mut","drop","dump_all","export","extract","extract","fmt","from","id","index","init","into","into_py","items_iter","least_significant_bit","most_significant_bit","serialize","to_owned","try_from","try_into","type_id","type_object_raw","unknown_1","BIG","Bound","BoundDef","Chunk","MapPastes","MapZone","PASTES","Paste","SMALL","UNKNOWN_3","WorldMapType","ZONES","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bounds","center","default_zoom","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","deserialize_chunk","deserialize_square","dim_i","dim_j","drop","drop","drop","drop","drop","drop","drop","dst_chunk","dst_i","dst_j","dst_plane","dump_all","dump_all","dump_big","dump_small","east","export_pastes","export_zones","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","id","init","init","init","init","init","init","init","internal_name","into","into","into","into","into","into","into","n_planes","name","north","pastes","serialize","serialize","serialize","serialize","serialize","serialize","show","south","src_chunk","src_i","src_j","src_plane","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unknown_1","unknown_2","west","x","y","python","PyCacheIndex","PyCacheIndexIter","PyFrame","PyIndexMetadata","PyIndexMetadataIter","PyMapSquare","PyMapSquares","PyMapSquaresIter","PySprite","PySprites","PySpritesIter","archive","archive","arguments","arguments","arguments","arguments","arguments","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","extract","extract","extract","extract","extract","extract","extract","extract","extract","extract","extract","extract","extract","extract","extract","extract","extract","extract","extract","extract","extract","extract","extract","fmt","from","from","from","from","from","from","from","from","from","from","from","get","get_achievement_configs","get_enum_configs","get_item_configs","get_location_configs","get_npc_configs","get_struct_configs","get_varbit_configs","hash_djb2","i","init","init","init","init","init","init","init","init","init","init","init","initializer","into","into","into","into","into","into","into","into","into","into","into","into_py","into_py","into_py","into_py","into_py","into_py","into_py","into_py","into_py","into_py","into_py","items_iter","items_iter","items_iter","items_iter","items_iter","items_iter","items_iter","items_iter","items_iter","items_iter","items_iter","j","locations","metadatas","metadatas","tiles","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_object_raw","type_object_raw","type_object_raw","type_object_raw","type_object_raw","type_object_raw","type_object_raw","type_object_raw","type_object_raw","type_object_raw","type_object_raw","water_locations","map","scale","zoom","CONFIG","RenderConfig","base","borrow","borrow_mut","deref","deref_mut","detailed","dim","drop","fast","from","init","initial_zoom","interp","into","lines","lineshape","map_id","mapscenes","render","render_tile","save_smallest","scale","tile_size","tileshape","try_from","try_into","type_id","put","put","draw","put","draw_overlay","draw_underlay","resize_half","resize_quarter","render_zoom_levels","paramtable","Integer","Param","ParamTable","String","arguments","arguments","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","deref","deref","deref_mut","deref_mut","deserialize","drop","drop","eq","equivalent","extract","extract","fmt","fmt","from","from","init","init","into","into","into_py","into_py","into_py","items_iter","params","serialize","serialize","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","type_object_raw","coordinate","variables","Coordinate","borrow","borrow_mut","clone","clone_into","cmp","deref","deref_mut","drop","eq","equivalent","fmt","from","init","into","partial_cmp","plane","serialize","to_owned","try_from","try_from","try_into","type_id","x","y","Varbit","Varbit","Varp","Varp","VarpOrVarbit","arguments","arguments","arguments","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","cmp","cmp","cmp","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","eq","eq","eq","equivalent","equivalent","equivalent","extract","extract","extract","extract","fmt","fmt","fmt","from","from","from","init","init","init","into","into","into","into_py","into_py","into_py","items_iter","items_iter","new","new","new","partial_cmp","partial_cmp","partial_cmp","serialize","serialize","serialize","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","type_object_raw","type_object_raw","val","val"],"q":["rs3cache","","","","","","","rs3cache::cli","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","rs3cache::definitions","","","","","","","","","","","","","","","","","","","","rs3cache::definitions::achievements","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","rs3cache::definitions::achievements::achievement_fields_implrs3cache::definitions::dbrows","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","rs3cache::definitions::enums","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","rs3cache::definitions::indextype","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","rs3cache::definitions::item_configs","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","rs3cache::definitions::item_configs::item_config_fieldsrs3cache::definitions::location_configs","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","rs3cache::definitions::location_configs::location_config_fieldsrs3cache::definitions::locations","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","rs3cache::definitions::maplabel_configs","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","rs3cache::definitions::maplabel_configs::maplabel_config_fields","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","rs3cache::definitions::mapscenes","","","","","","","","","","","","","","","","","","","","rs3cache::definitions::mapsquares","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","rs3cache::definitions::music","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","rs3cache::definitions::npc_configs","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","rs3cache::definitions::npc_configs::npc_config_fields","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","rs3cache::definitions::npcs","","","","","","","","","","","","","","","","","","","","","","","","rs3cache::definitions::overlays","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","rs3cache::definitions::sprites","","","","rs3cache::definitions::structs","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","rs3cache::definitions::tiles","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","rs3cache::definitions::underlays","","","","","","","","","","","","","","","","","","","","","","","","","","","","rs3cache::definitions::varbit_configs","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","rs3cache::definitions::worldmaps","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","rs3cache::ffi","rs3cache::ffi::pythonrs3cache::renderers","","","rs3cache::renderers::map","","","","","","","","","","","","","","","","","","","","","","","","","","","","","rs3cache::renderers::map::base","rs3cache::renderers::map::lines","rs3cache::renderers::map::lineshape","rs3cache::renderers::map::mapscenes","rs3cache::renderers::map::tileshape","","rs3cache::renderers::scale","","rs3cache::renderers::zoom","rs3cache::structures","rs3cache::structures::paramtable","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","rs3cache::types","","rs3cache::types::coordinate","","","","","","","","","","","","","","","","","","","","","","","","","rs3cache::types::variables","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["Tools for decoding the cache itself.","","Entities that can be deserialized from cache data.","Foreign function interfaces to <code>rs3cache</code>.","Functions for rendering the map.","Contains structures that are used in multiple different …","Various data types","","","","","","","","","","","","","","","","","","","","","","","","Checks whether the cache is in a consistent state. Indices …","","","","","","","","","","","","","","","","","","","","","","","","","Dumps the given archives.","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","The path where to look for the current cache.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","The path where to place output.","This exports them as small tiles, formatted as …","","","","","","","","","","","","","","","","","","Configurations of Achievements Describes the properties of …","","Describes the properties of enums.","The names of various indexes and archives.","Describes the properties of items.","Configuration of game locations.","Describes the id, position, type and rotation of game …","","Configuration of images drawn on the world map. Describes …","Data comprising the game surface.","","Configuration of npcs.","Describes the position and id of npcs.","Describes the colours of tiles.","Images displayed by the game client.","Describes the properties of structs.","Describes the properties of game surface tiles.","Describes the ground colours of tiles.","Bitpacked player variables.","","Describes the properties of a given Achievement.","","","","","","","","","","","","","Returns a mapping of all <code>Achievement</code>s.","Save the Achievement configs as <code>Achievement&gt;.json</code>. Exposed …","","","","","","Returns the argument unchanged.","1: hidden (e.g. chained achievements)","Its id.","","Calls <code>U::from(self)</code>.","","","","Its name, if present.","","","","","","","","","","","","","","","","","","","","","","","","","","","355 - Seven Colours in Their Hat - 1","","","","","","331 - Following In The Footsteps - 7126","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns a mapping of all <code>DbRow</code> configurations.","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Its id.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","Describes the properties of a given enum.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The integer variant.","","","The string variant.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns a mapping of all <code>Enum</code>s.","","","","","","","Save the item configs as <code>enums.json</code>. Exposed as …","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Its id.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Unimplemented.","Unimplemented.","Unimplemented.","Unimplemented.","Unimplemented.","Unimplemented.","Unimplemented.","Unimplemented.","Unimplemented.","Unimplemented.","Unimplemented.","Unimplemented.","Contains various smaller <code>ConfigType</code> definitions.","Unimplemented.","Enumeration of all archives in the Config (2) index.","Unimplemented.","Unimplemented.","Unimplemented.","Unimplemented.","Unimplemented.","Unimplemented.","Unimplemented.","Unimplemented.","Unimplemented.","Unimplemented.","Unimplemented.","Unimplemented.","Unimplemented.","Enumeration of all index types.","Unimplemented.","Deserializes to the sequence of <code>Location</code>s in <code>self</code>.","Contains the <code>LocationConfig</code> definitions.","Contains <code>MapLabelConfig</code>.","Contains <code>MapScene</code>.","Contains <code>MapSquare</code> definitions.","Unimplemented.","Unimplemented.","Enumeration of the files in the MAPSV2 archives.","Unimplemented.","Deserializes to a sequence of all npcs in <code>self</code>. Only …","Contains the <code>NpcConfig</code> definitions.","Unimplemented.","Unimplemented.","Contains <code>Overlay</code> definitions.","Unimplemented.","Unimplemented.","Unimplemented.","Unimplemented.","Unimplemented.","Contains client side scripts in a bytecode-like format …","Unimplemented.","Unimplemented.","Unimplemented.","Unimplemented.","Contains <code>sprite</code> definitions.","Unimplemented.","Unimplemented.","Unimplemented.","Unimplemented.","Unimplemented.","Deserializes to the <code>Tiles</code> of <code>self</code>.","","Contains <code>Underlay</code> definitions.","Unimplemented.","Unimplemented.","Unimplemented.","","","Unimplemented.","","Unimplemented.","Unimplemented.","Unimplemented.","Unimplemented.","Unimplemented.","","Unimplemented.","","Unimplemented.","Unimplemented.","Deserializes to a sequence of underwater  <code>Location</code>s in <code>self</code>…","Deserializes to the underwater <code>Tiles</code> of <code>self</code>.","Unimplemented.","Contains <code>MapZone</code>, <code>MapPastes</code> definitions, as well as PNG …","Unimplemented.","Unimplemented.","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Iterate over all indextypes.","","","","","","","","","","Describes the properties of a given item.","","","","","","","","","","","","","","","","","","","","","","","Returns a mapping of all <code>ItemConfig</code>s.","","","Save the item configs as <code>item_configs.json</code>. Exposed as …","","","","","","","","Returns the argument unchanged.","","","","Its id.","","Calls <code>U::from(self)</code>.","","","","Defines the structs used as fields of <code>ItemConfig</code>,","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Describes the properties of a given <code>Location</code>.","What rightclick options this location has, if any.","","","","","","","","","","","","","","Its west-east dimension, defaulting to 1 if not present.","Its south-north dimension, defaulting to 1 if not present.","","Returns a mapping of all location configurations","Save the location configs as <code>location_configs.json</code>. …","Save the location configs as individual <code>json</code> files.","","","","","Returns the argument unchanged.","","Its id.","","Calls <code>U::from(self)</code>.","","","","","Defines the structs used as fields of <code>LocationConfig</code>,","","Reference to a <code>MapScene</code> that is drawn on the map.","","","","A mapping of possible types to models.","This location can have different appearances depending on …","This location can have different appearances depending on …","Its name, if present.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Flag for whether this object has a red rather than a white …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Like <code>LocationMorphTable</code>, but with a default value.","","Contains an array of possible ids this location can morph …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","This <code>LocationConfig</code>’s default id.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Constructor for <code>LocationMorphTable</code>","Constructor for <code>ExtendedLocationMorphTable</code>","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","The possible ids this <code>LocationConfig</code> can be.","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","It’s on (contained plane - 1).","A location, also referred to as an “object”.","It’s on the contained plane","Describes whether this location is on the contained plane.","","","","","","","","","","","Directly compare the contained value to a given plane.","","","","","","","Constructor for <code>Location</code>.","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","The horizontal <code>MapSquare</code> coordinate.","The id corresponding to its <code>LocationConfig</code>.","","","Returns the contained value directly.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","The vertical <code>MapSquare</code> coordinate.","Returns whether this location is actually on the given …","The plane a.k.a elevation.","Its rotation, also known as “orientation”.","","","","","","","","","","The type of this location. The <code>models</code> field of its …","","","","The horizontal coordinate inside its <code>MapSquare</code>.","The vertical coordinate inside its <code>MapSquare</code>.","Map element on the ingame world map.","","The sprite shown on the map behind the main sprite.","","","Customizes label creation in script 7590.","","","","","","","Returns a mapping of all <code>MapLabelConfig</code>s.","Save the maplabels as <code>maplabels.json</code>. Exposed as …","","","","Font size ( any of 0, 1, 2, 3), if the label is text.","Returns the argument unchanged.","The sprite shown on the map on mouseover.","File id of the <code>MapLabelConfig</code>.","","Calls <code>U::from(self)</code>.","","","Text colour.","Text colour 2.","Switch between the “new” and “legacy” icons.","Defines the structs used as fields of <code>MapLabelConfig</code>,","Contains additional options:","Describes the polygon drawn on the map, if present.","Text shown when the label is rightclicked.","Text shown when the label is rightclicked.","","The sprite shown on the map.","If present, the label is text on the map, with the given …","","A toggle that controls whether the label is shown.","Contains another toggle that controls whether the label is …","","","","","Unknown field.","Unknown field.","Unknown field.","Unknown field.","Unknown field.","Unknown field.","Whether to show “new” or “legacy” map icon.","A polygon","Points that span a <code>Polygon</code>.","Controls whether the <code>MapLabelConfig</code> is shown.","","","","","Fill colour of the polygon.","","","","","","","","","","","","","","","","","Colour of the polygon.","","A reference pointing to the default <code>MapLabelConfig</code>.","","","","","","","","","","","","","","","","X-coordinate offset from the <code>MapLabelConfig</code> position.","Y-coordinate offset from the <code>MapLabelConfig</code> position.","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","A reference pointing to the legacy <code>MapLabelConfig</code>.","Lower bound of showing the <code>MapLabelConfig</code>.","Plane. Always zero.","The coordinates spanning the <code>Polygon</code>.","","","","","","","","","","","","","","","","","","","","","","","","","Upper bound of showing the <code>MapLabelConfig</code>.","Switch for the <code>Varp</code> or <code>Varbit</code>.","The <code>Varp</code> or <code>Varbit</code> controlling the toggle.","The <code>Varp</code> or <code>Varbit</code> controlling legacy toggle.","A configuration of a sprite that can be drawn on the world …","","","","","","","","","Returns a mapping of all <code>MapScene</code> configurations.","","Returns the argument unchanged.","Its id.","","Calls <code>U::from(self)</code>.","A reference to the sprite.","","","","","Iterator over a columns of planes with their x, y …","A group of adjacent <code>MapSquare</code>s.","Iterates over <code>GroupMapSquare</code> in arbitrary order.","Represents a section of the game map","Iterates over all <code>MapSquare</code>s in arbitrary order.","","Returns a view over all locations in all <code>MapSquare</code>s of <code>self</code>…","","","","","","","","","","","Returns a reference to the central <code>MapSquare</code>.","The horizontal coordinate of the central <code>MapSquare</code>.","The vertical coordinate of the central <code>MapSquare</code>.","","","","","","","","","","","","","","","","Saves all occurences of every object id as a <code>json</code> file to …","Saves all occurences of every object id as a <code>json</code> file to …","Saves all occurences of every object id as a <code>json</code> file to …","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns a view over a specific <code>MapSquare</code>..","The horizontal <code>MapSquare</code> coordinate.","Iterator over a columns of planes with their x, y …","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","Iterates over all <code>MapSquare</code>s of <code>self</code> in arbitrary order.","The vertical <code>MapSquare</code> coordinate.","Returns a view over the <code>locations</code> field, if present.","Member status of chunks in bits.","","","","","","","","","Take its locations, consuming <code>self</code>.","Returns a view over the <code>tiles</code> field, if present","Returns a view over the <code>tiles</code> field, if present","Returns a view over all tiles within <code>interp</code> of the <code>Tile</code> at …","","","","","","","","","","","","","","","","Returns a view over the <code>locations</code> field, if present.","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","Describes the properties of a given <code>Npc</code>.","","","","","","","","","","","","","","","","","","","","","Returns a mapping of all npc configurations","Save the npc configs as <code>npc_configs.json</code>. Exposed as …","","","","","Returns the argument unchanged.","","","","Its id.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","Defines the structs used as fields of <code>NpcConfig</code>,","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Like <code>NpcMorphTable</code>, but with a default value.","","","Contains an array of possible ids this npc can morph into, …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Constructor for <code>NpcMorphTable</code>","Constructor for <code>ExtendedNpcMorphTable</code>","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A non player character.","","","","","","","Constructor for <code>Npc</code>.","","","Returns the argument unchanged.","The horizontal <code>MapSquare</code> coordinate.","The id corresponding to its <code>NpcConfig</code>.","","Calls <code>U::from(self)</code>.","The vertical <code>MapSquare</code> coordinate.","The plane a.k.a elevation.","","","","","","The horizontal coordinate inside its <code>MapSquare</code>.","The vertical coordinate inside its <code>MapSquare</code>.","Describes (part of) ground colour.","","","","","","","","","","Returns a mapping of all <code>Overlay</code> configurations.","Save the maplabels as <code>maplabels.json</code>. Exposed as …","","","","","Returns the argument unchanged.","Id of the <code>Overlay</code> configuration.","","Calls <code>U::from(self)</code>.","","","Primary colour of the <code>Overlay</code> configuration.","Secondary colour of the <code>Overlay</code> configuration.","","","","","","","","Type alias for a rgba image.","","Returns a <code>BTreeMap</code> holding all sprites in <code>ids</code>.","Saves an image of every sprite to disk.","Describes the properties of a given item.","","","","","","","","","","Returns a mapping of all <code>Struct</code>s.","Save the item configs as <code>structs.json</code>. Exposed as …","","","","","Returns the argument unchanged.","Its id.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","Describes the properties of a tile in a <code>MapSquare</code>.","Type alias for the 4x64x64 array of <code>Tile</code>s in a <code>MapSquare</code>.","","","","","","","","","","Constructor for a sequence of <code>Tile</code>s.","","","","Returns the argument unchanged.","The height of the tile.","","Calls <code>U::from(self)</code>.","","","Reference to an <code>Overlay</code>.","","This tile’s settings.","Reference to a shape.","","","","","","Reference to an <code>Underlay</code>.","Describes the general ground colour. This colour is …","","","","","","Ground colour of this tile type","","","","","Returns a mapping of all <code>Underlay</code> configurations.","Save the location configs as <code>location_configs.json</code>. …","","","","Returns the argument unchanged.","Id of the underlay configuration.","","Calls <code>U::from(self)</code>.","","","","","","","","","A varbit configuration.","","","","","","","","","","Returns a mapping of all <code>VarbitConfig</code>s.","Save the varbit configs as <code>varbit_configs.json</code>. Exposed as …","","","","Returns the argument unchanged.","Id of the <code>Varbit</code>.","The Varp that this varbit maps to.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","Represents a rectangular area of the game map..","","","Describes how a worldmap is formed from the actual map.","Describes the general properties of a map zone.","","","Used to draw the minimap in the top left of the ingame …","","Enumeration of the archives in the WORLDMAP index.","","","","","","","","","","","","","","","","Get a reference to the map zone’s bounds.","Get the map zone’s center coordinate.","The map zone’s default zoom.","","","","","","","","","","","","","","","","","Constructor for <code>MapPastes</code>.","","","","The horizontal dimension of the world map.","The vertical dimension of the world map.","","","","","","","","","","","","Returns a mapping of all <code>MapZone</code> configurations.","Returns a mapping of all <code>MapPastes</code>.","Exports big images of world maps to <code>out/world_map_big</code>.","Exports small images of world maps to <code>out/world_map_small</code>.","","Exports all world map pastes to <code>out/map_pastes.json</code>.","Exports all world map zones to <code>out/map_zones.json</code>.","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","The map id.","","","","","","","","Get a reference to the map zone’s internal name.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Get a reference to the map zone’s internal name.","","The <code>Paste</code>s making up the world map.","","","","","","","Whether the mapzone is shown.","","","","","","","","","","","","","","","","","","","","","","","","","","","Get a reference to the map zone’s unknown 1.","Get a reference to the map zone’s unknown 2.","","","","Python bindings for <code>rs3cache</code>.","Wrapper over <code>CacheIndex</code>. The Python alias for this is <code>Index</code>","Iterator over all archives in an Index.","","","Iterator over all archives in an Index.","Obtained from <code>PyMapSquares</code>’s <code>get</code> method.","Container of <code>PyMapSquare</code>s. Accessible with …","Iterator over all archives in an Index.","Obtained from <code>PySprites</code>’s <code>get</code> method.","","Iterator over all archives in an Index.","Get a specific <code>Archive</code>.","Get a specific <code>Archive</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Get a specific mapsquare.","Wrapper for <code>Achievement::dump_all</code>","Wrapper for <code>Struct::dump_all</code>","Wrapper for <code>NpcConfig::dump_all</code>","Wrapper for <code>LocationConfig::dump_all</code>","Wrapper for <code>NpcConfig::dump_all</code>","Wrapper for <code>Struct::dump_all</code>","Wrapper for <code>VarbitConfig::dump_all</code>","","The horizontal <code>MapSquare</code> coordinate.","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","The vertical <code>MapSquare</code> coordinate.","The <code>Location</code>s in a mapsquare.","Returns the <code>Metadata</code> of all archives in <code>self</code>.","Returns the [<code>Metadata</code>] of all archives in <code>self</code>.","The <code>Tile</code>s in a mapsquare.   ","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The water <code>Location</code>s in a mapsquare.","Exports map tiles.","","Creates successive tiles for different zoom levels, for …","","","Renders the ground colours.","","","","","","The height and width of a full <code>MapSquare</code> in pixels.","","","Returns the argument unchanged.","","The highest zoom level.","The range at which underlays are blended.","Calls <code>U::from(self)</code>.","Responsible for drawing lines - doors, fences, walls and …","Describes the shape of lines drawn by the map renderer.","-1 is the “real” world map.","Responsible for drawing <code>MapScene</code>.","Entry point for the map renderer.","Responsible for rendering a single <code>MapSquare</code>.","","Scale factor, this cannot be zero.","The height and width of a <code>Tile</code> in pixels.","Describes the shape of overlays drawn by the map renderer.","","","","Applies ground colouring to the base image.","Applies lines of doors, fences, walls and so on to the …","","Applies <code>MapScene</code>s to the base image.","","","Resizes a 512x512 image to 256x256.","Resizes a 1024x1024 image to 256x256.","Given a folder and a range of zoom levels, recursively …","A mapping of keys to properties.","The integer variant.","An additional key:property mapping.","<code>LocationConfig</code>s, items and <code>NpcConfig</code>s can have additional …","The string variant.","","","","","","","","","","","","","","","Constructor for <code>ParamTable</code>","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","Key:Value pairs of additional properties.","","","","","","","","","","","","The <code>Coordinate</code> type.","Player variables","A coordinate.","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","A bitmapping of a <code>Varp</code>","See <code>Varbit</code>.","A player variable","See <code>Varp</code>.","A variable containing either a Varp or Varbit.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","Constructor for <code>Varbit</code>","Constructor for <code>Varp</code>.","Constructor for VarpOrVarbit.","","","","","","","","","","","","","","","","","","","","","The value of the <code>Varbit</code>. Cannot be <code>Some(u16::MAX)</code>.","The value of the <code>Varp</code>. Cannot be <code>Some(u16::MAX)</code>."],"i":[0,0,0,0,0,0,0,5,2,5,0,0,5,5,5,5,5,5,2,5,5,5,5,0,5,5,5,5,5,5,3,3,3,2,5,3,2,5,3,2,5,2,5,2,5,3,2,5,3,2,5,3,2,5,3,3,3,2,5,3,2,5,3,3,3,2,5,3,3,2,5,3,3,3,3,3,2,5,2,5,2,5,3,2,5,3,2,5,3,3,3,2,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,18,18,18,18,18,18,18,18,18,18,18,18,0,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,0,0,0,0,0,0,0,27,28,29,30,31,32,33,27,28,29,30,31,32,33,27,28,29,30,31,32,33,27,28,29,30,31,32,33,27,28,29,30,31,32,33,27,28,29,30,31,32,33,27,28,29,30,31,32,33,27,28,29,30,27,28,29,30,31,32,33,27,28,29,30,31,32,33,27,27,28,28,29,29,30,30,31,31,32,32,33,33,27,28,29,30,31,32,33,27,28,29,30,31,32,33,27,28,29,30,31,32,33,27,28,29,30,31,32,33,27,28,29,30,31,32,33,30,27,28,29,30,31,32,33,29,30,27,28,29,30,31,32,33,29,30,27,28,27,28,29,30,31,32,33,27,28,29,30,31,32,33,27,28,29,30,31,32,33,27,28,29,30,31,32,33,27,28,29,30,31,32,33,27,28,27,28,0,36,36,36,0,35,35,36,35,36,35,36,35,36,35,35,35,35,36,35,36,35,36,35,35,35,35,35,35,36,35,36,35,35,36,35,36,35,35,35,36,35,36,35,35,36,35,36,35,36,35,35,38,0,37,38,38,37,38,38,37,38,38,37,38,37,38,37,38,37,38,38,37,37,38,38,37,38,37,38,38,38,38,37,38,38,37,38,37,38,38,37,38,37,38,37,38,38,38,37,38,37,38,38,37,38,38,38,39,0,38,39,37,38,0,0,37,38,39,40,37,38,39,40,37,38,39,40,37,38,39,40,37,38,39,40,37,38,40,40,37,38,39,40,37,38,39,40,40,37,38,39,40,40,37,38,39,37,38,39,0,40,40,37,38,39,40,40,37,38,39,40,37,38,40,37,38,39,40,37,38,39,40,37,38,39,40,37,38,40,37,38,39,40,37,38,39,40,40,37,37,38,38,39,40,37,38,39,40,37,38,39,40,40,40,40,160,160,160,161,160,160,161,160,160,161,161,161,161,160,161,0,161,161,160,160,160,160,160,161,161,161,161,160,161,0,161,162,160,161,161,160,160,160,0,161,162,160,161,160,161,160,161,161,160,161,160,161,160,161,160,160,160,160,160,160,160,162,161,161,161,161,161,162,162,161,162,161,161,161,161,161,162,161,162,161,160,162,162,161,160,160,160,160,161,162,160,161,162,160,161,162,160,161,162,160,161,162,160,161,162,160,161,162,160,161,162,160,160,161,162,160,161,162,160,161,162,0,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,0,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,0,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,0,0,0,0,0,0,0,45,46,47,48,49,50,51,45,46,47,48,49,50,51,45,46,47,48,49,50,51,45,46,47,48,49,50,51,45,46,47,48,49,50,51,47,45,46,45,46,47,48,49,50,51,45,46,47,48,49,50,51,47,48,49,50,51,45,46,47,48,49,50,51,45,46,45,46,45,45,46,46,47,47,48,48,49,49,50,50,51,51,45,46,47,48,49,50,51,45,46,47,48,49,50,51,45,46,47,48,49,50,51,45,46,47,48,49,50,51,45,46,47,48,49,50,51,45,46,47,48,49,50,51,51,45,49,45,45,46,47,48,49,50,51,48,45,46,47,48,49,50,51,45,46,47,48,49,50,51,45,46,47,48,49,50,51,45,46,47,48,49,50,51,45,46,47,48,49,50,51,46,46,45,0,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,0,0,52,52,52,52,52,52,52,52,52,52,52,52,52,0,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,0,0,0,0,0,0,0,0,0,0,0,0,0,0,53,54,55,56,57,58,59,60,61,62,63,64,65,66,53,54,55,56,57,58,59,60,61,62,63,64,65,66,53,54,55,56,57,58,59,60,61,62,63,64,65,66,53,54,55,56,57,58,59,60,61,62,63,64,65,66,53,54,55,56,57,58,59,60,61,62,63,64,65,66,55,54,53,54,55,56,57,58,59,60,61,62,63,64,65,66,53,54,55,56,57,58,59,60,61,62,63,64,65,66,53,54,55,56,57,58,59,60,61,62,63,64,65,66,53,54,55,56,57,58,59,60,61,62,63,64,65,66,53,53,54,54,55,55,56,56,57,57,58,58,59,59,60,60,61,61,62,62,63,63,64,64,65,65,66,66,53,54,55,56,57,58,59,60,61,62,63,64,65,66,53,54,55,56,57,58,59,60,61,62,63,64,65,66,65,66,53,54,53,54,55,56,57,58,59,60,61,62,63,64,65,66,53,54,55,56,57,58,59,60,61,62,63,64,65,66,53,54,55,56,57,58,59,60,61,62,63,64,65,66,53,54,55,56,57,58,59,60,61,62,63,64,65,66,56,57,53,54,55,56,57,58,59,60,61,62,63,64,65,66,66,58,53,54,55,56,57,58,59,60,61,62,63,64,65,66,53,54,55,56,57,58,59,60,61,62,63,64,65,66,53,54,55,56,57,58,59,60,61,62,63,64,65,66,53,54,55,56,57,58,59,60,61,62,63,64,65,66,53,54,55,56,57,58,59,60,61,62,63,64,65,66,59,60,61,62,64,59,60,61,62,64,59,61,64,61,64,64,64,59,63,53,54,66,66,68,0,68,0,68,69,68,69,68,69,68,69,68,69,68,68,69,68,69,68,69,69,68,69,68,69,69,69,68,69,68,69,68,69,69,69,68,69,68,68,69,68,69,69,69,68,69,69,68,69,69,68,69,68,69,68,69,69,68,69,69,69,69,0,72,72,72,72,72,72,72,72,72,72,72,72,0,72,72,72,72,72,72,72,72,72,72,72,72,72,72,0,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,0,0,0,0,73,74,75,76,73,73,74,75,76,73,74,75,76,73,74,75,76,73,74,75,76,73,73,75,73,74,75,76,73,74,75,76,73,74,75,73,74,75,76,76,76,73,73,74,74,75,75,76,76,73,74,75,76,73,74,75,76,73,74,75,76,73,74,75,76,73,74,75,76,73,74,75,76,75,74,76,73,73,74,75,76,73,74,75,76,73,74,75,76,73,74,75,76,73,74,75,76,73,74,75,76,74,75,74,75,0,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,0,0,0,0,0,0,78,89,88,82,78,81,89,88,82,78,81,78,78,78,89,88,82,78,81,89,88,82,78,81,89,88,82,78,81,0,0,0,81,89,88,82,78,81,82,78,81,81,89,88,82,78,81,89,88,82,78,81,89,88,82,78,81,81,81,88,82,89,88,89,88,89,88,81,81,81,78,89,88,82,78,81,89,88,82,78,81,89,88,82,78,81,81,0,0,93,94,93,94,93,94,93,94,93,94,93,94,93,94,0,93,94,93,94,93,94,93,94,93,94,93,94,93,94,93,94,0,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,0,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,0,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,102,107,97,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,99,100,96,96,97,97,98,98,99,99,100,100,101,101,102,102,103,103,104,104,105,105,106,106,107,107,108,108,109,109,110,110,111,111,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,96,97,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,98,101,107,111,106,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,99,100,103,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,105,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,104,108,109,110,104,108,109,110,104,108,109,104,108,109,104,109,109,96,97,0,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,0,113,113,113,113,113,113,113,113,113,113,0,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,0,0,0,0,0,115,115,115,115,115,115,115,115,115,115,0,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,0,0,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,0,117,117,117,117,117,117,117,117,117,117,117,0,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,0,118,118,118,118,118,118,118,118,118,118,0,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,163,0,0,0,0,0,163,0,163,163,0,163,163,119,121,122,123,125,124,163,119,121,122,123,125,124,119,119,119,163,119,121,122,123,125,124,163,119,121,122,123,125,124,121,122,123,124,125,125,123,123,163,119,121,122,123,125,124,125,125,125,125,119,123,0,0,122,0,0,119,121,122,123,125,124,163,119,121,122,123,125,124,123,163,119,121,122,123,125,124,119,163,119,121,122,123,125,124,125,119,122,123,119,121,122,123,125,124,119,122,125,125,125,125,163,119,121,122,123,125,124,163,119,121,122,123,125,124,163,119,121,122,123,125,124,119,119,122,124,124,0,0,0,0,0,0,0,0,0,0,0,0,128,130,133,134,137,138,131,128,132,133,134,135,136,137,138,131,130,139,128,132,133,134,135,136,137,138,131,130,139,131,131,128,132,133,134,135,136,137,138,131,130,139,128,132,133,134,135,136,137,138,131,130,139,128,132,133,134,135,136,137,138,131,130,139,128,128,132,132,133,133,134,134,135,135,136,136,137,137,138,138,131,131,131,130,130,139,139,131,128,132,133,134,135,136,137,138,131,130,139,135,0,0,0,0,0,0,0,0,137,128,132,133,134,135,136,137,138,131,130,139,0,128,132,133,134,135,136,137,138,131,130,139,128,132,133,134,135,136,137,138,131,130,139,128,132,133,134,135,136,137,138,131,130,139,137,137,128,130,137,131,128,132,133,134,135,136,137,138,131,130,139,128,132,133,134,135,136,137,138,131,130,139,128,132,133,134,135,136,137,138,131,130,139,128,132,133,134,135,136,137,138,131,130,139,137,0,0,0,0,0,0,143,143,143,143,143,143,143,143,143,143,143,143,143,0,0,143,0,0,0,0,143,143,0,143,143,143,0,0,0,0,0,0,0,0,0,0,154,0,0,154,153,154,153,154,153,154,153,154,153,154,153,154,153,154,153,153,154,154,154,153,153,153,154,153,154,153,154,153,154,153,154,154,153,153,153,154,153,154,153,154,153,154,153,154,153,0,0,0,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,0,158,0,158,0,156,157,158,156,157,158,156,157,158,156,157,158,156,157,158,156,157,158,156,157,158,156,157,158,156,157,158,156,157,158,156,157,158,156,156,157,157,156,157,158,156,157,158,156,157,158,156,157,158,156,157,158,156,157,156,157,158,156,157,158,156,157,158,156,157,158,156,157,158,156,157,158,156,157,158,156,157,156,157],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1,1],[1,1],[[]],[[]],[[]],[[]],[[]],[[]],[[2,3],4],[[5,3],4],[2,2],[5,5],[[]],[[]],[[],3],[6],[6],[6],[6],[6],[6],[6],[6],[6],0,[[],3],[[2,7],8],[[5,7],8],[[3,7],8],[[]],[[]],[[]],[9,[[11,[3,10]]]],[9,[[11,[3,10]]]],[[],6],[[],6],[[],6],0,[[]],[[]],[[]],[[],1],[[],1],0,0,[[]],[[]],[2,[[13,[12]]]],[5,[[13,[12]]]],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],14],[[],14],[[],14],[[3,9],[[11,[10]]]],[[3,9],[[11,[10]]]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[15,[[17,[16]]]],[[]],[[]],0,[18,18],[[]],[[],18],[6],[6],0,[6],[3,[[4,[[20,[19,18]]]]]],[3,4],[16,[[11,[21]]]],[16,[[22,[18]]]],[[18,7],8],[[18,7],8],0,[[]],0,0,[[],6],[[]],[[18,15],23],0,[[],24],0,0,0,0,0,0,0,0,[18,11],0,0,0,0,0,0,0,0,[[]],[[],25],[[],11],[[],11],[[],14],[15,26],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[15,[[17,[16]]]],[15,[[17,[16]]]],[15,[[17,[16]]]],[15,[[17,[16]]]],[15,[[17,[16]]]],[15,[[17,[16]]]],[15,[[17,[16]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[27,27],[28,28],[29,29],[30,30],[31,31],[32,32],[33,33],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],0,0,0,0,[34,27],[34,28],[34,29],[34,30],[34,31],[34,32],[34,33],[6],[6],[6],[6],[6],[6],[6],[16,[[22,[27]]]],[16,[[11,[21]]]],[16,[[22,[28]]]],[16,[[11,[21]]]],[16,[[22,[29]]]],[16,[[11,[21]]]],[16,[[11,[21]]]],[16,[[22,[30]]]],[16,[[22,[31]]]],[16,[[11,[21]]]],[16,[[11,[21]]]],[16,[[22,[32]]]],[16,[[11,[21]]]],[16,[[22,[33]]]],[[27,7],8],[[28,7],8],[[29,7],8],[[30,7],8],[[31,7],8],[[32,7],8],[[33,7],8],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[27,15],23],[[28,15],23],[[29,15],23],[[30,15],23],[[31,15],23],[[32,15],23],[[33,15],23],0,[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],0,0,[27,11],[28,11],[29,11],[30,11],[31,11],[32,11],[33,11],0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[15,26],[15,26],[15,26],[15,26],[15,26],[15,26],[15,26],0,0,0,0,0,0,0,0,0,[15,[[17,[16]]]],[[]],[[]],[[]],[[]],[35,35],[36,36],[[]],[[]],0,0,[[],35],[6],[6],[6],[6],[6],[6],[3,[[4,[[20,[19,35]]]]]],[16,[[22,[35]]]],[16,[[22,[35]]]],[16,[[11,[21]]]],[[35,7],8],[[35,7],8],[[36,7],8],[[]],[[]],0,[[],6],[[],6],[[]],[[]],[[35,15],23],[[],24],[35,11],[36,11],[[]],[[]],[[],25],[[],11],[[],11],[[],11],[[],11],[[],14],[[],14],[15,26],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[15,[[17,[16]]]],[15,[[17,[16]]]],[15,[[17,[16]]]],[15,[[17,[16]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[37,37],[38,38],[39,39],[40,40],[[]],[[]],[[]],[[]],[[],37],[[],38],[[],40],0,[6],[6],[6],[6],[6],[6],[6],[6],[[19,34],40],[6],[6],[6],[6],[3,[[4,[[20,[19,40]]]]]],[[37,37],41],[[38,38],41],[[39,39],41],[[],41],[[],41],[[],41],[3,4],[16,[[22,[40]]]],[16,[[11,[21]]]],[[37,7],8],[[38,7],8],[[39,7],8],[[40,7],8],[[40,7],8],[[]],[[]],[[]],[[]],[37],[38],0,[[],6],[[],6],[[],6],[[],6],[[]],[[]],[[]],[[]],[[37,15],23],[[38,15],23],[[39,15],[[17,[16]]]],[[40,15],23],[37,41],[38,41],[[],24],[37,11],[38,11],[39,11],[40,11],[[]],[[]],[[]],[[]],[[],25],[[],11],[42,[[11,[37]]]],[[],11],[42,[[11,[38]]]],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],14],[[],14],[[],14],[[],14],[15,26],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[6],[6],[6],[6],[6],[6],[6],[6],[6],[[]],[[]],[[]],[[],6],[[],6],[[],6],[[]],[[]],[[]],[[],[[43,[19]]]],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],14],[[],14],[[],14],0,0,[15,[[17,[16]]]],0,0,[[]],[[]],0,0,[44,44],[[]],0,0,0,0,0,0,[[],44],[6],[6],[6],0,0,[3,[[4,[[20,[19,44]]]]]],0,0,[3,4],[16,[[11,[21]]]],[16,[[22,[44]]]],0,0,0,[[44,7],8],[[44,7],8],[[]],0,0,0,0,[[],6],[[]],[[44,15],23],0,0,0,[[],24],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[44,11],0,0,0,0,[[]],[[],25],0,[[],11],[[],11],[[],14],[15,26],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[15,[[17,[16]]]],[15,[[17,[16]]]],[15,[[17,[16]]]],[15,[[17,[16]]]],[15,[[17,[16]]]],[15,[[17,[16]]]],[15,[[17,[16]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[45,45],[46,46],[47,47],[48,48],[49,49],[50,50],[51,51],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[],45],[[],46],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[34,47],[34,48],[34,49],[34,50],[34,51],[6],[6],[6],[6],[6],[6],[6],[[45,45],41],[[46,46],41],[[],41],[[],41],[16,[[22,[45]]]],[16,[[11,[21]]]],[16,[[22,[46]]]],[16,[[11,[21]]]],[16,[[11,[21]]]],[16,[[22,[47]]]],[16,[[11,[21]]]],[16,[[22,[48]]]],[16,[[11,[21]]]],[16,[[22,[49]]]],[16,[[22,[50]]]],[16,[[11,[21]]]],[16,[[22,[51]]]],[16,[[11,[21]]]],[[45,7],8],[[46,7],8],[[47,7],8],[[48,7],8],[[49,7],8],[[50,7],8],[[51,7],8],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[45,15],23],[[46,15],23],[[47,15],23],[[48,15],23],[[49,15],23],[[50,15],23],[[51,15],23],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],0,0,0,0,[45,11],[46,11],[47,11],[48,11],[49,11],[50,11],[51,11],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[15,26],[15,26],[15,26],[15,26],[15,26],[15,26],[15,26],0,0,0,0,0,0,[15,[[17,[16]]]],[[]],[[]],0,[52,52],[[]],0,0,0,[[],52],[6],[6],0,0,[6],[3,[[4,[[20,[19,52]]]]]],[3,4],[3,4],[16,[[22,[52]]]],[16,[[11,[21]]]],[[52,7],8],[[52,7],8],[[]],0,0,[[],6],[[]],[[52,15],23],0,0,[[],24],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[52,11],0,[[]],[[],25],0,0,0,[[],11],[[],11],[[],14],[15,26],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[15,[[17,[16]]]],[15,[[17,[16]]]],[15,[[17,[16]]]],[15,[[17,[16]]]],[15,[[17,[16]]]],[15,[[17,[16]]]],[15,[[17,[16]]]],[15,[[17,[16]]]],[15,[[17,[16]]]],[15,[[17,[16]]]],[15,[[17,[16]]]],[15,[[17,[16]]]],[15,[[17,[16]]]],[15,[[17,[16]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[53,53],[54,54],[55,55],[56,56],[57,57],[58,58],[59,59],[60,60],[61,61],[62,62],[63,63],[64,64],[65,65],[66,66],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[34,[[11,[53,67]]]],[34,[[11,[54,67]]]],[34,[[11,[55,67]]]],[34,[[11,[56,67]]]],[34,[[11,[57,67]]]],[34,[[11,[58,67]]]],[34,[[11,[59,67]]]],[34,[[11,[60,67]]]],[34,[[11,[61,67]]]],[34,[[11,[62,67]]]],[34,[[11,[63,67]]]],[34,[[11,[64,67]]]],[34,[[11,[65,67]]]],[34,[[11,[66,67]]]],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[16,[[22,[53]]]],[16,[[11,[21]]]],[16,[[22,[54]]]],[16,[[11,[21]]]],[16,[[22,[55]]]],[16,[[11,[21]]]],[16,[[11,[21]]]],[16,[[22,[56]]]],[16,[[11,[21]]]],[16,[[22,[57]]]],[16,[[22,[58]]]],[16,[[11,[21]]]],[16,[[11,[21]]]],[16,[[22,[59]]]],[16,[[11,[21]]]],[16,[[22,[60]]]],[16,[[11,[21]]]],[16,[[22,[61]]]],[16,[[11,[21]]]],[16,[[22,[62]]]],[16,[[11,[21]]]],[16,[[22,[63]]]],[16,[[22,[64]]]],[16,[[11,[21]]]],[16,[[22,[65]]]],[16,[[11,[21]]]],[16,[[22,[66]]]],[16,[[11,[21]]]],[[53,7],8],[[54,7],8],[[55,7],8],[[56,7],8],[[57,7],8],[[58,7],8],[[59,7],8],[[60,7],8],[[61,7],8],[[62,7],8],[[63,7],8],[[64,7],8],[[65,7],8],[[66,7],8],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[53,15],23],[[54,15],23],[[55,15],23],[[56,15],23],[[57,15],23],[[58,15],23],[[59,15],23],[[60,15],23],[[61,15],23],[[62,15],23],[[63,15],23],[[64,15],23],[[65,15],23],[[66,15],23],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],0,0,[53,11],[54,11],[55,11],[56,11],[57,11],[58,11],[59,11],[60,11],[61,11],[62,11],[63,11],[64,11],[65,11],[66,11],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[15,26],[15,26],[15,26],[15,26],[15,26],[15,26],[15,26],[15,26],[15,26],[15,26],[15,26],[15,26],[15,26],[15,26],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[15,[[17,[16]]]],[15,[[17,[16]]]],[[]],[[]],[[]],[[]],[68,68],[69,69],[[]],[[]],[[68,42],41],[6],[6],[6],[6],[6],[6],[[42,42,70,34],[[71,[69]]]],[[68,68],41],[[69,69],41],[[],41],[[],41],[16,[[22,[69]]]],[16,[[11,[21]]]],[[68,7],8],[[69,7],8],[[]],[[]],[68],[69],0,0,[[],6],[[],6],[68,42],[[]],[[]],[[68,15],23],[[69,15],23],[[],24],0,[[68,42],41],0,0,[68,11],[69,11],[[69,15],23],[[]],[[]],[[],11],[[],11],[[],11],[[],11],0,[[],14],[[],14],[15,26],0,0,0,[15,[[17,[16]]]],0,[[]],[[]],0,[72,72],[[]],[[],72],[6],[6],[6],[3,[[4,[[20,[19,72]]]]]],[3,4],[16,[[11,[21]]]],[16,[[22,[72]]]],[[72,7],8],0,[[]],0,0,[[],6],[[]],[[72,15],23],[[],24],0,0,0,0,0,0,0,0,[72,11],0,0,[[]],0,0,[[],11],[[],11],[[],14],[15,26],0,0,0,0,0,0,0,0,0,0,[15,[[17,[16]]]],[15,[[17,[16]]]],[15,[[17,[16]]]],[15,[[17,[16]]]],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[73,73],[74,74],[75,75],[76,76],[[]],[[]],[[]],[[]],0,[[],73],0,[6],[6],[6],[6],[6],[6],[6],[6],[34,73],[34,74],[34,75],[6],[6],[6],[6],0,0,[16,[[22,[73]]]],[16,[[11,[21]]]],[16,[[22,[74]]]],[16,[[11,[21]]]],[16,[[11,[21]]]],[16,[[22,[75]]]],[16,[[22,[76]]]],[16,[[11,[21]]]],[[73,7],8],[[74,7],8],[[75,7],8],[[76,7],8],[[]],[[]],[[]],[[]],[[],6],[[],6],[[],6],[[],6],[[]],[[]],[[]],[[]],[[73,15],23],[[74,15],23],[[75,15],23],[[76,15],23],[[],24],[[],24],[[],24],[[],24],0,0,0,0,[73,11],[74,11],[75,11],[76,11],[[]],[[]],[[]],[[]],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],14],[[],14],[[],14],[[],14],[15,26],[15,26],[15,26],[15,26],0,0,0,0,0,[[]],[[]],[77,77],[[]],[[],77],[6],[6],[6],[3,[[4,[[20,[19,77]]]]]],[[77,7],8],[[]],0,[[],6],[[]],0,[[]],[[],11],[[],11],[[],14],0,0,0,0,0,0,[78,[[80,[79]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[78,[[13,[81]]]],[78,42],[78,42],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[3,4],[3,4],[3,4],[[81,7],8],[[]],[[]],[[]],[[]],[[]],[[82,42,42],[[4,[81]]]],[78,[[13,[81]]]],[81,42],[81,[[11,[83,84]]]],[[],6],[[],6],[[],6],[[],6],[[],6],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[82],[78,[[85,[81]]]],[81,42],[81,[[11,[84]]]],0,[[[87,[86]],[87,[86]],3],[[4,[88]]]],[3,[[4,[82]]]],[89,13],[88,13],[90,91],[90,91],[89],[88],[81,[[11,[[71,[69]],84]]]],[81,[[11,[70,84]]]],[81,[[11,[70,84]]]],[[78,6,6,6,92],[[80,[79]]]],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],14],[[],14],[[],14],[[],14],[[],14],[81,[[11,[84]]]],0,0,[[]],[[]],[[]],[[]],[93,93],[94,94],[[]],[[]],[6],[6],[6],[6],[6],[6],[3,4],[[93,7],8],[[94,7],8],[[]],[[]],[[],6],[[],6],[[]],[[]],[[]],[[]],[[],11],[[],11],[[],11],[[],11],[[],14],[[],14],0,0,0,0,0,0,0,[15,[[17,[16]]]],0,0,[[]],[[]],[95,95],[[]],0,0,[[],95],[6],[6],0,[6],[3,[[4,[[20,[19,95]]]]]],[3,4],[16,[[11,[21]]]],[16,[[22,[95]]]],[[95,7],8],[[95,7],8],[[]],0,0,0,0,[[],6],[[]],[[95,15],23],[[],24],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[95,11],0,0,0,0,0,[[]],[[],25],0,[[],11],[[],11],[[],14],[15,26],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[15,[[17,[16]]]],[15,[[17,[16]]]],[15,[[17,[16]]]],[15,[[17,[16]]]],[15,[[17,[16]]]],[15,[[17,[16]]]],[15,[[17,[16]]]],[15,[[17,[16]]]],[15,[[17,[16]]]],[15,[[17,[16]]]],[15,[[17,[16]]]],[15,[[17,[16]]]],[15,[[17,[16]]]],[15,[[17,[16]]]],[15,[[17,[16]]]],[15,[[17,[16]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[96,96],[97,97],[98,98],[99,99],[100,100],[101,101],[102,102],[103,103],[104,104],[105,105],[106,106],[107,107],[108,108],[109,109],[110,110],[111,111],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[34,96],[34,97],[34,98],[34,99],[34,100],[34,101],[34,102],[34,103],[34,104],[34,105],[34,106],[34,107],[34,108],[34,109],[34,110],[34,111],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],0,0,[16,[[22,[96]]]],[16,[[11,[21]]]],[16,[[11,[21]]]],[16,[[22,[97]]]],[16,[[22,[98]]]],[16,[[11,[21]]]],[16,[[22,[99]]]],[16,[[11,[21]]]],[16,[[22,[100]]]],[16,[[11,[21]]]],[16,[[22,[101]]]],[16,[[11,[21]]]],[16,[[22,[102]]]],[16,[[11,[21]]]],[16,[[22,[103]]]],[16,[[11,[21]]]],[16,[[22,[104]]]],[16,[[11,[21]]]],[16,[[22,[105]]]],[16,[[11,[21]]]],[16,[[22,[106]]]],[16,[[11,[21]]]],[16,[[22,[107]]]],[16,[[11,[21]]]],[16,[[22,[108]]]],[16,[[11,[21]]]],[16,[[11,[21]]]],[16,[[22,[109]]]],[16,[[11,[21]]]],[16,[[22,[110]]]],[16,[[11,[21]]]],[16,[[22,[111]]]],[[96,7],8],[[97,7],8],[[98,7],8],[[99,7],8],[[100,7],8],[[101,7],8],[[102,7],8],[[103,7],8],[[104,7],8],[[105,7],8],[[106,7],8],[[107,7],8],[[108,7],8],[[109,7],8],[[110,7],8],[[111,7],8],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[96,15],23],[[97,15],23],[[98,15],23],[[99,15],23],[[100,15],23],[[101,15],23],[[102,15],23],[[103,15],23],[[104,15],23],[[105,15],23],[[106,15],23],[[107,15],23],[[108,15],23],[[109,15],23],[[110,15],23],[[111,15],23],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],0,0,0,0,0,[96,11],[97,11],[98,11],[99,11],[100,11],[101,11],[102,11],[103,11],[104,11],[105,11],[106,11],[107,11],[108,11],[109,11],[110,11],[111,11],0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[15,26],[15,26],[15,26],[15,26],[15,26],[15,26],[15,26],[15,26],[15,26],[15,26],[15,26],[15,26],[15,26],[15,26],[15,26],[15,26],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[112,112],[[]],[6],[6],[[42,42,34],[[71,[112]]]],[6],[[112,7],8],[[]],0,0,[[],6],[[]],0,0,[112,11],[[]],[[],11],[[],11],[[],14],0,0,0,[15,[[17,[16]]]],[[]],[[]],[113,113],[[]],[[],113],[6],[6],[6],[3,[[4,[[20,[19,113]]]]]],[3,4],[16,[[11,[21]]]],[16,[[22,[113]]]],[[113,7],8],[[113,7],8],[[]],0,[[],6],[[]],[[113,15],23],[[],24],0,0,[113,11],[[]],[[],25],[[],11],[[],11],[[],14],[15,26],0,[34,[[4,[[20,[6,114]]]]]],[[19,[71,[19]],3],[[4,[[20,[114]]]]]],[3,4],0,[15,[[17,[16]]]],[[]],[[]],[115,115],[[]],[[],115],[6],[6],[6],[3,[[4,[[20,[19,115]]]]]],[3,4],[16,[[22,[115]]]],[16,[[11,[21]]]],[[115,7],8],[[115,7],8],[[]],0,[[],6],[[]],[[115,15],23],[[],24],0,[115,11],[[]],[[],25],[[],11],[[],11],[[],14],[15,26],0,0,[15,[[17,[16]]]],[[]],[[]],[116,116],[[]],[[],116],[6],[6],[6],[34,70],[16,[[11,[21]]]],[16,[[22,[116]]]],[[116,7],8],[[]],0,[[],6],[[]],[[116,15],23],[[],24],0,[116,11],0,0,[[]],[[],11],[[],11],[[],14],[15,26],0,0,[15,[[17,[16]]]],[[]],[[]],[117,117],[[]],0,[[],117],[6],[6],[6],[3,[[4,[[20,[19,117]]]]]],[3,4],[16,[[11,[21]]]],[16,[[22,[117]]]],[[117,7],8],[[]],0,[[],6],[[]],[[117,15],23],[[],24],[117,11],[[]],[[],11],[[],11],[[],14],[15,26],0,[15,[[17,[16]]]],[[]],[[]],[118,118],[[]],[[],118],[6],[6],[6],[3,[[4,[[20,[19,118]]]]]],[3,4],[16,[[11,[21]]]],[16,[[22,[118]]]],[[118,7],8],[[]],0,0,[[],6],[[]],[[118,15],23],[[],24],0,0,[118,11],[[]],[[],11],[[],11],[[],14],[15,26],0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[119],[119,120],[119,42],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[34,121],[34,122],[[19,34],123],[34,124],[34,125],[34,125],0,0,[6],[6],[6],[6],[6],[6],[6],0,0,0,0,[3,[[4,[[126,[19,119]]]]]],[3,[[4,[[126,[19,123]]]]]],[3,4],[3,4],0,[3,4],[3,4],[[119,7],8],[[121,7],8],[[122,7],8],[[123,7],8],[[125,7],8],[[124,7],8],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[119,127],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[119,127],0,0,[119,11],[121,11],[122,11],[123,11],[125,11],[124,11],[119,41],0,0,0,0,0,[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[119,19],[119,42],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[128,19],[[22,[129]]]],[[130,19],[[22,[129]]]],[15,[[17,[16]]]],[15,[[17,[16]]]],[15,[[17,[16]]]],[15,[[17,[16]]]],[15,[[17,[16]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[131,131],[[]],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[16,[[22,[128]]]],[16,[[22,[128]]]],[16,[[22,[132]]]],[16,[[22,[132]]]],[16,[[22,[133]]]],[16,[[22,[133]]]],[16,[[22,[134]]]],[16,[[22,[134]]]],[16,[[22,[135]]]],[16,[[22,[135]]]],[16,[[22,[136]]]],[16,[[22,[136]]]],[16,[[22,[137]]]],[16,[[22,[137]]]],[16,[[22,[138]]]],[16,[[22,[138]]]],[16,[[11,[21]]]],[16,[[22,[131]]]],[16,[[22,[131]]]],[16,[[22,[130]]]],[16,[[22,[130]]]],[16,[[22,[139]]]],[16,[[22,[139]]]],[[131,7],8],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[135,16,16],[[22,[137]]]],[[[13,[140]]],[[22,[[20,[19,18]]]]]],[[[13,[140]]],[[22,[[20,[19,40]]]]]],[[[13,[140]]],[[22,[[20,[19,44]]]]]],[[[13,[140]]],[[22,[[20,[19,52]]]]]],[[[13,[140]]],[[22,[[20,[19,95]]]]]],[[[13,[140]]],[[22,[[20,[19,115]]]]]],[[[13,[140]]],[[22,[[20,[19,118]]]]]],[127,86],[137,42],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[15,141],22],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[128,15],23],[[132,15],23],[[133,15],23],[[134,15],23],[[135,15],23],[[136,15],23],[[137,15],23],[[138,15],23],[[131,15],23],[[130,15],23],[[139,15],23],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[137,42],[[137,15],[[22,[142]]]],[128,[[22,[133]]]],[130,[[22,[133]]]],[137,[[22,[[20,[116]]]]]],[[]],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[15,26],[15,26],[15,26],[15,26],[15,26],[15,26],[15,26],[15,26],[15,26],[15,26],[15,26],[[137,15],[[22,[142]]]],0,0,0,0,0,0,[[]],[[]],[6],[6],[[],143],0,[6],[[],143],[[]],[[],6],0,0,[[]],0,0,0,0,[3,4],[[[145,[144]],78,20,20,20,20,20]],[[[145,[144]],42,42]],0,0,0,[[],11],[[],11],[[],14],[[6,146,78,20,20]],[[6,146,78,20]],[[42,42,19,147]],[[6,146,78,20,20,20]],[[42,19,147]],[[[13,[42]],19,147]],[148,146],[148,146],[[[0,[[145,[144]],149,150]],86,[152,[151]]],4],0,0,0,0,0,[15,[[17,[16]]]],[15,[[17,[16]]]],[[]],[[]],[[]],[[]],[153,153],[154,154],[[]],[[]],[6],[6],[6],[6],[34,153],[6],[6],[[154,154],41],[[],41],[16,[[22,[153]]]],[16,[[11,[21]]]],[[153,7],8],[[154,7],8],[[]],[[]],[[],6],[[],6],[[]],[[]],[[153,15],23],[[154,15],23],[[154,15],23],[[],24],0,[153,11],[154,11],[[]],[[]],[[],11],[[],11],[[],11],[[],11],[[],14],[[],14],[15,26],0,0,0,[[]],[[]],[120,120],[[]],[[120,120],155],[6],[6],[6],[[120,120],41],[[],41],[[120,7],8],[[]],[[],6],[[]],[[120,120],[[13,[155]]]],0,[120,11],[[]],[19,[[11,[120]]]],[[],11],[[],11],[[],14],0,0,0,0,0,0,0,[15,[[17,[16]]]],[15,[[17,[16]]]],[15,[[17,[16]]]],[[]],[[]],[[]],[[]],[[]],[[]],[156,156],[157,157],[158,158],[[]],[[]],[[]],[[156,156],155],[[157,157],155],[[158,158],155],[6],[6],[6],[6],[6],[6],[6],[6],[6],[[156,156],41],[[157,157],41],[[158,158],41],[[],41],[[],41],[[],41],[16,[[11,[21]]]],[16,[[22,[156]]]],[16,[[22,[157]]]],[16,[[11,[21]]]],[[156,7],8],[[157,7],8],[[158,7],8],[[]],[[]],[[]],[[],6],[[],6],[[],6],[[]],[[]],[[]],[[156,15],23],[[157,15],23],[[158,15],23],[[],24],[[],24],[159,156],[159,157],[[157,156],158],[[156,156],[[13,[155]]]],[[157,157],[[13,[155]]]],[[158,158],[[13,[155]]]],[156,11],[157,11],[158,11],[[]],[[]],[[]],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],14],[[],14],[[],14],[15,26],[15,26],0,0],"p":[[6,"Command"],[4,"Render"],[3,"Config"],[6,"CacheResult"],[4,"Dump"],[15,"usize"],[3,"Formatter"],[6,"Result"],[3,"ArgMatches"],[3,"Error"],[4,"Result"],[3,"PossibleValue"],[4,"Option"],[3,"TypeId"],[3,"Python"],[3,"PyAny"],[3,"Py"],[3,"Achievement"],[15,"u32"],[3,"BTreeMap"],[3,"PyErr"],[6,"PyResult"],[6,"PyObject"],[3,"PyClassItemsIter"],[3,"String"],[3,"PyTypeObject"],[3,"VarbitRequirement"],[3,"VarbitRequirement10"],[3,"SkillRequirement"],[3,"MaybeIronmanSkillRequirement"],[3,"MultipleVarbitsRequirement"],[3,"PartialVarbitRequirement"],[3,"PackedVarbitRequirement"],[3,"Bytes"],[3,"DbRow"],[4,"Value"],[4,"KeyType"],[4,"ValueType"],[4,"Value"],[3,"Enum"],[15,"bool"],[15,"u8"],[3,"IntoIter"],[3,"ItemConfig"],[3,"Rotation"],[3,"Translation"],[3,"ColourReplacements"],[3,"Textures"],[3,"Quests"],[3,"StackInfo"],[3,"RecolourPalette"],[3,"LocationConfig"],[3,"LocationMorphTable"],[3,"ExtendedLocationMorphTable"],[3,"ColourReplacements"],[3,"Models"],[3,"Models2"],[3,"Textures"],[3,"Unknown79"],[3,"Unknown173"],[3,"Unknown163"],[3,"Unknown78"],[3,"Unknown160"],[3,"Unknown201"],[3,"HeadModels"],[3,"Unknown204"],[3,"ReadError"],[4,"Watery"],[3,"Location"],[6,"TileArray"],[3,"Vec"],[3,"MapLabelConfig"],[3,"Polygon"],[3,"Toggle"],[3,"LegacySwitch"],[3,"PolygonPoint"],[3,"MapScene"],[3,"GroupMapSquare"],[8,"Iterator"],[3,"Box"],[3,"MapSquare"],[3,"MapSquares"],[6,"ColumnIter"],[3,"CacheError"],[3,"Iter"],[15,"i32"],[3,"RangeInclusive"],[3,"GroupMapSquareIterator"],[3,"MapSquareIterator"],[3,"ProgressBar"],[3,"ProgressBarIter"],[15,"isize"],[3,"Jaga"],[3,"ChunkDescriptor"],[3,"NpcConfig"],[3,"NpcMorphTable"],[3,"ExtendedNpcMorphTable"],[3,"NpcModels"],[3,"ShadowIntensity"],[3,"Shadow"],[3,"HeadModels"],[3,"ColourReplacements"],[3,"Textures"],[3,"AmbientSounds"],[3,"Translations"],[3,"RecolourPalette"],[3,"OldCursors"],[3,"Unknown155"],[3,"Unknown179"],[3,"Unknown164"],[3,"Quests"],[3,"Npc"],[3,"Overlay"],[6,"Sprite"],[3,"Struct"],[3,"Tile"],[3,"Underlay"],[3,"VarbitConfig"],[3,"MapZone"],[3,"Coordinate"],[3,"BoundDef"],[3,"Bound"],[3,"MapPastes"],[3,"Chunk"],[3,"Paste"],[3,"HashMap"],[15,"str"],[3,"PyCacheIndex"],[3,"Archive"],[3,"PySprites"],[3,"PyFrame"],[3,"PyCacheIndexIter"],[3,"PyIndexMetadata"],[3,"PyIndexMetadataIter"],[3,"PyMapSquares"],[3,"PyMapSquaresIter"],[3,"PyMapSquare"],[3,"PySprite"],[3,"PySpritesIter"],[3,"PathBuf"],[3,"PyModule"],[3,"PyList"],[3,"RenderConfig"],[3,"Path"],[8,"AsRef"],[6,"RgbaImage"],[8,"FnMut"],[8,"GenericImageView"],[8,"Send"],[8,"Sync"],[15,"i8"],[3,"Range"],[3,"ParamTable"],[4,"Param"],[4,"Ordering"],[3,"Varbit"],[3,"Varp"],[4,"VarpOrVarbit"],[15,"u16"],[3,"IndexType"],[3,"ConfigType"],[3,"MapFileType"],[3,"WorldMapType"]]},\
"rs3cache_backend":{"doc":"Core cache interpreting utilities.","t":[0,0,0,0,0,0,0,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,13,8,13,13,3,4,13,13,13,3,4,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,13,4,13,13,13,11,11,5,11,11,11,11,11,11,11,11,11,11,13,3,4,13,6,13,13,13,13,13,13,13,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,11,11,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,3,4,13,13,8,3,3,13,3,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,3,11,12,11,11,11,11,11,5,11,12,11,12,11,11,11,11,11,11,11,12,11,12,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,12,11,12],"n":["arc","buf","decoder","error","hash","index","meta","Archive","archive_id","arguments","borrow","borrow_mut","clone","clone_into","default","extract","extract","file","file_count","fmt","from","index_id","into","into_py","items_iter","take_files","to_owned","try_from","try_into","type_id","type_object_raw","Allocated","BufExtra","DuplicateOpcode","Eof","JString","JStringKind","NotExhausted","NotNulTerminated","OpcodeNotImplemented","ReadError","ReadErrorKind","Refcounted","add_context","add_context_id","add_decode_context","arguments","as_ref","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","deref","duplicate_opcode","eof","eq","eq","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","get_array","get_bitflags","get_decr_smart","get_masked_data","get_masked_index","get_padded_string","get_rgb","get_smart32","get_smarts","get_string","get_unsigned_smart","into","into","into","into","into_py","new","not_exhausted","not_nul_terminated","opcode_not_implemented","provide","serialize","source","to_owned","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_get_array","try_get_i32","try_get_i8","try_get_masked_index","try_get_smart32","try_get_string","try_get_u16","try_get_u32","try_get_u8","try_get_uint","try_get_unsigned_smart","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","buf","len","BZip2Error","DecodeError","GzipError","Other","ZlibError","borrow","borrow_mut","decompress","fmt","fmt","from","into","provide","source","to_string","try_from","try_into","type_id","ArchiveNotFoundError","CacheError","CacheErrorKind","CacheNotFoundError","CacheResult","CrcError","DecodeError","DecompressionError","FileMissingError","IoError","JsonEncodeError","ReadError","SqliteError","VersionError","archive_missing","borrow","borrow","borrow_mut","borrow_mut","cache_not_found","clone","clone_into","crc","file_missing","fmt","fmt","from","from","from","from","from","from","into","into","io","kind","provide","provide","py_error_impl","source","to_owned","to_string","try_from","try_from","try_into","try_into","type_id","type_id","version","ArchiveNotFoundError","CacheNotFoundError","FileMissingError","as_ptr","as_ptr","as_ptr","as_ref","as_ref","as_ref","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","deref","deref","deref","extract","extract","extract","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from_borrowed_ptr_or_opt","from_borrowed_ptr_or_opt","from_borrowed_ptr_or_opt","from_owned_ptr_or_opt","from_owned_ptr_or_opt","from_owned_ptr_or_opt","into","into","into","into_py","into_py","into_py","new_err","new_err","new_err","provide","provide","provide","source","source","source","to_object","to_object","to_object","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from_exact","try_from_exact","try_from_exact","try_from_unchecked","try_from_unchecked","try_from_unchecked","try_into","try_into","try_into","type_id","type_id","type_id","type_object_raw","type_object_raw","type_object_raw","hash_djb2","CacheIndex","CachePath","Env","Given","IndexState","Initial","IntoIter","Omitted","Truncated","archive","as_ref","assert_coherence","assert_coherence","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","default","feed","fmt","from","from","from","from","from","get_file","index_id","into","into","into","into","into","into_iter","into_iter","into_iter","into_py_dict","metadatas","metadatas","new","next","retain","size_hint","to_owned","to_path_buf","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","IndexMetadata","Metadata","archive_id","archive_id","arguments","borrow","borrow","borrow_mut","borrow_mut","bytes_to_vec","child_count","child_count","child_indices","child_indices","clone","clone","clone_into","clone_into","cmp","cmp","compressed_size","compressed_size","crc","crc","default","default","digest","digest","eq","eq","extract","extract","fmt","fmt","from","from","get","hash","hash","index_id","index_id","into","into","into_iter","into_py","items_iter","iter","keys","metadatas","name","name","partial_cmp","partial_cmp","serialize","serialize","size","size","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","type_object_raw","unknown","unknown","version","version"],"q":["rs3cache_backend","","","","","","","rs3cache_backend::arc","","","","","","","","","","","","","","","","","","","","","","","","rs3cache_backend::buf","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","rs3cache_backend::buf::JStringKind","","rs3cache_backend::decoder","","","","","","","","","","","","","","","","","","rs3cache_backend::error","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","rs3cache_backend::error::py_error_impl","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","rs3cache_backend::hash","rs3cache_backend::index","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","rs3cache_backend::meta","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["Units of data in a <code>CacheIndex</code>.","Wrapper around <code>Cursor</code>.","Functions to decompress cache data.","","","The interface between rs3cache and the cache database.","Metadata about the cache itself.","A collection of files.","The archive id of <code>self</code>.","","","","","","","","","Removes and returns a File.","The quantity of files currently in the archive.","","Returns the argument unchanged.","The <code>index id</code> of <code>self</code>.","Calls <code>U::from(self)</code>.","","","Take the files. Consumes the <code>Archive</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","Reads one byte, returning 8 boolean bitflags.","Reads Kind one or two bytes.","Reads masked data.","Reads two obfuscated bytes.","Reads a 0-start and 0-terminated String from the buffer.","Reads three unsigned bytes , returning a <code>[red, blue, green]</code>…","Reads two or four unsigned bytes as an 32-bit unsigned …","Reads a multiple of two bytes as an 32-bit unsigned …","Reads a 0-terminated String from the buffer","Reads one or two unsigned bytes as an 16-bit unsigned …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Safety","","","","","","","","","","","","","","","","","","","Reads two obfuscated bytes.","Reads two or four unsigned bytes as an 32-bit unsigned …","Reads a 0-terminated String from the buffer","","","","","Reads one or two unsigned bytes as an 16-bit unsigned …","","","","","","","","","","","Wraps <code>bzip2_rs::decoder::DecoderError</code>.","","","","","","","Decompresses index files.","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","Raised if an <code>Archive</code> is not in the <code>CacheIndex</code>.","An error type for things that can go wrong when reading …","","Raised if the index cannot be found, usually if the cache …","Result wrapper for <code>CacheError</code>.","Raised when the CRC field of the requested archive is …","","Raised if a file fails during decompression.","Raised if a file is not in an <code>Archive</code>.","Wraps <code>io.error</code>.","Wraps <code>serde_json::Error</code>.","Raised if reading from a buffer fails","Wraps <code>sqlite::Error</code>.","Raised when the CRC field of the requested archive is …","","","","","","","","","","","","","Returns the argument unchanged.","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","Raised if an archive is missing","Raised if the cache cannot be found","Raised if a file in an archive is missing","Gets the underlying FFI pointer, returns a borrowed …","Gets the underlying FFI pointer, returns a borrowed …","Gets the underlying FFI pointer, returns a borrowed …","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","Creates a new <code>PyErr</code> of this type.","Creates a new <code>PyErr</code> of this type.","Creates a new <code>PyErr</code> of this type.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Container of <code>Archive</code>s.","","","","Trait that describes the current index state. Cannot be …","Initial state of <code>CacheIndex</code>.","Iterator over all <code>Archive</code>s of <code>self</code>. Yields in arbitrary …","","","Get an <code>Archive</code> from <code>self</code>.","","Asserts whether all indices’ metadata match their …","Assert whether the cache held by <code>self</code> is in a coherent …","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Executes a sql command to retrieve an archive from the …","The index id of <code>self</code>, corresponding to the …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","Returns a view over the <code>IndexMetadata</code> of <code>self</code>.","Returns a view of the <code>IndexMetadata</code> of the contained …","Constructor for <code>CacheIndex</code>.","","Retain only those archives that are in <code>ids</code>. Advances <code>self</code> …","","","","","","","","","","","","","","","","","","","Contains the <code>Metadata</code> for every <code>Archive</code> in the index.","Metadata about <code>Archive</code>s.","The archive_id of the <code>Archive</code>.","","","","","","","","The count of files in <code>self</code>.","","Enumerated file ids of files in the <code>Archive</code>.","","","","","","","","Size of the <code>Archive</code>.","","See CRC.","","","","See whirlpool digest.","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","View a specific <code>Metadata</code> of <code>self</code>.","","","The index id of this Metadata.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","An iterator visiting all key-value pairs in arbitrary …","Returns the ids of the archives in the index.","Get a reference to the index metadata’s metadatas.","The hashed name of the <code>Archive</code>, if present.","","","","","","Size of the <code>Archive</code> once decompressed.","","","","","","","","","","","","","Usually, the amount of seconds between Unix Epoch and when …",""],"i":[0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,28,0,26,26,0,0,26,26,26,0,0,28,19,19,19,24,24,19,26,24,28,19,26,24,28,19,26,24,28,19,26,24,28,24,19,19,24,24,19,19,26,24,28,19,26,24,24,28,65,65,65,65,65,65,65,65,65,65,65,19,26,24,28,24,24,19,19,19,19,24,19,19,26,24,28,19,19,26,24,28,65,65,65,65,65,65,65,65,65,65,65,19,26,24,28,19,26,24,28,66,66,38,0,38,38,38,38,38,0,38,38,38,38,38,38,38,38,38,38,46,0,0,46,0,46,46,46,46,46,46,46,46,46,39,46,39,46,39,39,39,39,39,39,39,39,46,39,39,39,39,39,46,39,39,39,39,39,0,39,39,39,46,39,46,39,46,39,39,0,0,0,47,49,50,47,49,50,47,49,50,47,49,50,47,49,50,47,49,50,47,47,49,49,50,50,47,49,50,47,49,50,47,49,50,47,49,50,47,49,50,47,49,50,47,49,50,47,49,50,47,49,50,47,49,50,47,47,49,49,50,50,47,49,50,47,49,50,47,49,50,47,49,50,47,49,50,0,0,0,42,42,0,0,0,42,0,54,42,0,54,58,57,54,61,42,58,57,54,61,42,42,42,42,57,42,58,57,54,61,42,54,54,58,57,54,61,42,54,54,61,54,54,61,54,61,54,61,42,42,58,57,54,61,42,58,57,54,61,42,58,57,54,61,42,0,0,56,56,56,56,60,56,60,0,56,56,56,56,56,60,56,60,56,60,56,56,56,56,56,60,56,56,56,60,56,56,56,60,56,60,60,56,60,56,56,56,60,60,56,56,60,60,60,56,56,56,60,56,60,56,56,56,60,56,60,56,60,56,60,56,56,56,56,56],"f":[0,0,0,0,0,0,0,0,[1,2],[3,[[5,[4]]]],[[]],[[]],[1,1],[[]],[[],1],[4,[[6,[1]]]],[4,[[8,[7]]]],[[1,2],[[10,[9]]]],[1,11],[[1,12],13],[[]],[1,2],[[]],[[1,3],14],[[],15],[1,[[16,[2,9]]]],[[]],[[],8],[[],8],[[],17],[3,18],0,0,0,0,0,0,0,0,0,0,0,0,[[19,20],19],[[19,2],19],[[19,[22,[21]],9,20],19],[3,[[5,[4]]]],[[[24,[23]]],25],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[19,19],[26,26],[[[24,[[0,[27,23]]]]],[[24,[[0,[27,23]]]]]],[[[28,[[0,[27,23]]]]],[[28,[[0,[27,23]]]]]],[[]],[[]],[[]],[[]],[[[24,[23]]]],[[[22,[21]],21],19],[[],19],[[[24,[23]],[24,[23]]],29],[[[24,[23]],25],29],[[19,12],13],[[19,12],13],[[26,12],13],[[[24,[[0,[30,23]]]],12],13],[[[28,[[0,[30,23]]]],12],13],[[]],[[]],[20,[[24,[23]]]],[[]],[[]],[[]],[[]],[[],[[32,[31]]]],[[],22],[[],31],[[],24],[[]],[[],[[32,[2]]]],[[],2],[[],24],[[],31],[[]],[[]],[[]],[[]],[[[24,[23]],3],[[5,[4]]]],[[23,11],[[24,[23]]]],[[],19],[[],19],[21,19],[33],[[[24,[23]]],8],[19,[[32,[34]]]],[[]],[[]],[[]],[[]],[[],20],[[],8],[[],8],[[],8],[[],8],[[],[[8,[19]]]],[[],[[8,[35,19]]]],[[],[[8,[36,19]]]],[[],[[8,[31,19]]]],[[],[[8,[[32,[2]],19]]]],[[],[[8,[24,19]]]],[[],[[8,[31,19]]]],[[],[[8,[2,19]]]],[[],[[8,[21,19]]]],[11,[[8,[37,19]]]],[[],[[8,[31,19]]]],[[],8],[[],8],[[],8],[[],8],[[],17],[[],17],[[],17],[[],17],0,0,0,0,0,0,0,[[]],[[]],[[[22,[21]]],[[8,[9,38]]]],[[38,12],13],[[38,12],13],[[]],[[]],[33],[38,[[32,[34]]]],[[],20],[[],8],[[],8],[[],17],0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[2,2],39],[[]],[[]],[[]],[[]],[[40,41,[43,[42]]],39],[39,39],[[]],[[2,2,44,44],39],[[2,2,2],39],[[39,12],13],[[39,12],13],[[]],[19,39],[45,39],[39,39],[38,39],[[]],[[]],[[]],[[40,41],39],[39,46],[[39,33]],[33],0,[39,[[32,[34]]]],[[]],[[],20],[[],8],[[],8],[[],8],[[],8],[[],17],[[],17],[[2,2,44,44],39],0,0,0,[47,48],[49,48],[50,48],[47,4],[49,4],[50,4],[[]],[[]],[[]],[[]],[[]],[[]],[47,4],[49,4],[50,4],[4,[[6,[47]]]],[4,[[6,[49]]]],[4,[[6,[50]]]],[[47,12],[[8,[51]]]],[[47,12],[[8,[51]]]],[[49,12],[[8,[51]]]],[[49,12],[[8,[51]]]],[[50,12],[[8,[51]]]],[[50,12],[[8,[51]]]],[[]],[[]],[[]],[[3,48],32],[[3,48],32],[[3,48],32],[[3,48],32],[[3,48],32],[[3,48],32],[[]],[[]],[[]],[[47,3],[[5,[47]]]],[[49,3],[[5,[49]]]],[[50,3],[[5,[50]]]],[[],7],[[],7],[[],7],[33],[33],[33],[47,[[32,[34]]]],[49,[[32,[34]]]],[50,[[32,[34]]]],[[47,3],14],[[49,3],14],[[50,3],14],[[],20],[[],20],[[],20],[[],8],[[],[[8,[52]]]],[[],8],[[],[[8,[52]]]],[[],8],[[],[[8,[52]]]],[[],[[8,[52]]]],[[],[[8,[52]]]],[[],[[8,[52]]]],[[]],[[]],[[]],[[],8],[[],8],[[],8],[[],17],[[],17],[[],17],[3,18],[3,18],[3,18],[53,35],0,0,0,0,0,0,0,0,0,[[54,2],[[10,[1]]]],[42,55],[[[43,[42]]],10],[54,10],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[42,42],[[]],[[],42],0,[[42,12],13],[[]],[[]],[[]],[[]],[[]],[[54,56],[[10,[9]]]],[54,2],[[]],[[]],[[]],[[]],[[]],[[[54,[57]]]],[[[54,[58]]]],[[]],[3,59],[54,60],[61,60],[[2,[43,[42]]],[[10,[[54,[58]]]]]],[61,32],[[[54,[58]],[22,[2]]],[[54,[57]]]],[61],[[]],[42,41],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],17],[[],17],[[],17],[[],17],[[],17],0,0,[56,2],0,[3,[[5,[4]]]],[[]],[[]],[[]],[[]],[32,8],[56,2],0,[56],0,[56,56],[60,60],[[]],[[]],[[56,56],62],[[60,60],62],[56,[[32,[2]]]],0,[56,35],0,[[],56],[[],60],[56,32],0,[[56,56],29],[[60,60],29],[4,[[8,[7]]]],[4,[[6,[56]]]],[[56,12],13],[[60,12],13],[[]],[[]],[[60,2],[[32,[56]]]],[56],[60],[56,2],0,[[]],[[]],[60],[[56,3],14],[[],15],[60,[[63,[2,56]]]],[60,[[64,[2,56]]]],[60,16],[56,[[32,[35]]]],0,[[56,56],[[32,[62]]]],[[60,60],[[32,[62]]]],[56,8],[60,8],[56,[[32,[2]]]],0,[[]],[[]],[[],8],[[],8],[[],8],[[],8],[[],17],[[],17],[3,18],[56,[[32,[35]]]],0,[56,35],0],"p":[[3,"Archive"],[15,"u32"],[3,"Python"],[3,"PyAny"],[3,"Py"],[6,"PyResult"],[3,"PyErr"],[4,"Result"],[3,"Bytes"],[6,"CacheResult"],[15,"usize"],[3,"Formatter"],[6,"Result"],[6,"PyObject"],[3,"PyClassItemsIter"],[3,"BTreeMap"],[3,"TypeId"],[3,"PyTypeObject"],[3,"ReadError"],[3,"String"],[15,"u8"],[3,"Vec"],[8,"Buf"],[3,"JString"],[15,"str"],[4,"ReadErrorKind"],[8,"Clone"],[4,"JStringKind"],[15,"bool"],[8,"Debug"],[15,"u16"],[4,"Option"],[3,"Demand"],[8,"Error"],[15,"i32"],[15,"i8"],[15,"u64"],[4,"DecodeError"],[3,"CacheError"],[3,"Error"],[3,"PathBuf"],[4,"CachePath"],[3,"Arc"],[15,"i64"],[3,"Error"],[4,"CacheErrorKind"],[3,"CacheNotFoundError"],[3,"PyObject"],[3,"ArchiveNotFoundError"],[3,"FileMissingError"],[3,"Error"],[3,"PyDowncastError"],[8,"AsRef"],[3,"CacheIndex"],[3,"Path"],[3,"Metadata"],[3,"Truncated"],[3,"Initial"],[3,"PyDict"],[3,"IndexMetadata"],[3,"IntoIter"],[4,"Ordering"],[3,"Iter"],[3,"Keys"],[8,"BufExtra"],[13,"Refcounted"]]},\
"rs3cache_macros":{"doc":"Proc macro for the <code>rs3cache</code> crate.","t":[23],"n":["pyo3_get_all"],"q":["rs3cache_macros"],"d":["Applies <code>#[pyo3(get)]</code> to all fields of a struct."],"i":[0],"f":[0],"p":[]},\
"rs3cache_utils":{"doc":"Miscellanious utilities.","t":[0,0,0,0,0,3,8,3,8,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,18,18,18,3,18,18,18,18,18,18,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,11,11,11,11,8,11,3,11,11,11,11,11,11,11,11,11,11],"n":["adapters","color","lazy","rangeclamp","slice","Accumulate","Accumulator","Pairwise","Pairwisor","accumulate","borrow","borrow","borrow_mut","borrow_mut","from","from","into","into","into_iter","into_iter","next","next","pairwise","size_hint","try_from","try_from","try_into","try_into","type_id","type_id","ALPHA","BLACK","CYAN","Color","GREY","MAGENTA","PURE_RED","RED","WHITE","YELLOW","borrow","borrow_mut","from","into","try_from","try_into","type_id","Lazy","borrow","borrow_mut","deref","fmt","from","get","into","new","try_from","try_into","type_id","RangeClamp","clamp","SharedSlice","borrow","borrow_mut","deref","from","from","into","new","try_from","try_into","type_id"],"q":["rs3cache_utils","","","","","rs3cache_utils::adapters","","","","","","","","","","","","","","","","","","","","","","","","","rs3cache_utils::color","","","","","","","","","","","","","","","","","rs3cache_utils::lazy","","","","","","","","","","","","rs3cache_utils::rangeclamp","","rs3cache_utils::slice","","","","","","","","","",""],"d":["Adapters for iterators.","Various colour constants.","Lazy primitives.","Clamps a <code>Range</code> to a certain interval.","","An iterator to maintain state while iterating another …","An iterator to maintain state while iterating another …","An iterator that returns pair values ofn the preceding …","An iterator that returns pair values of the preceding …","An iterator adaptor that yields the computation of the …","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","An iterator adaptor that yields the preceding iterator in …","","","","","","","","","","","Various colour constants","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","Provides the <code>clamp()</code> method for <code>Range</code>, clamping it to a …","Clamps a range to a given <code>start_bound</code> and <code>end_bound</code>.","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","",""],"i":[0,0,0,0,0,0,0,0,0,15,1,3,1,3,1,3,1,3,1,3,1,3,16,3,1,3,1,3,1,3,17,17,17,0,17,17,17,17,17,17,17,17,17,17,17,17,17,0,7,7,7,7,7,7,7,7,7,7,7,0,18,0,12,12,12,12,12,12,12,12,12,12],"f":[0,0,0,0,0,0,0,0,0,[[],1],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[1,2],[3,2],[[],3],[3],[[],4],[[],4],[[],4],[[],4],[[],5],[[],5],0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[],4],[[],4],[[],5],0,[[]],[[]],[[[7,[6]]]],[[[7,[[0,[8,6]],8,8]],9],10],[[]],[[[7,[6]]],4],[[]],[6,[[7,[6]]]],[[],4],[[],4],[[],5],0,[[],11],0,[[]],[[]],[12],[[]],[[12,[11,[13]]],12],[[]],[14,12],[[],4],[[],4],[[],5]],"p":[[3,"Accumulate"],[4,"Option"],[3,"Pairwise"],[4,"Result"],[3,"TypeId"],[8,"Clone"],[3,"Lazy"],[8,"Debug"],[3,"Formatter"],[6,"Result"],[3,"Range"],[3,"SharedSlice"],[15,"usize"],[3,"Box"],[8,"Accumulator"],[8,"Pairwisor"],[3,"Color"],[8,"RangeClamp"]]}\
}');
if (typeof window !== 'undefined' && window.initSearch) {window.initSearch(searchIndex)};
if (typeof exports !== 'undefined') {exports.searchIndex = searchIndex};
